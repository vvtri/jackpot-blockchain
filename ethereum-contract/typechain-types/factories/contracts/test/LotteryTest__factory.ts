/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  LotteryTest,
  LotteryTestInterface,
} from '../../../contracts/test/LotteryTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'ERC1967InvalidImplementation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ERC1967NonPayable',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidInitialization',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotInitializing',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UUPSUnauthorizedCallContext',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'UUPSUnsupportedProxiableUUID',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'version',
        type: 'uint64',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_FIVE_FIRST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_FOUR_FIRST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_FOUR_FIRST_NUMBER_AND_LAST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_JACKPOT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_LAST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_NOT_LUCKY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_THREE_FIRST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_THREE_FIRST_NUMBER_AND_LAST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_TWO_FIRST_NUMBER_AND_LAST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_LUCKY_NUMBER_LAST_SLOT_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_LUCKY_NUMBER_NORMAL_SLOT_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_TICKET_AMOUNT_EACH_BUY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MIN_LUCKY_NUMBER_SLOT_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPGRADE_INTERFACE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockNumber',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '_isPowerPlay',
        type: 'bool',
      },
      {
        internalType: 'uint24[6]',
        name: '_ticketNumber',
        type: 'uint24[6]',
      },
    ],
    name: 'buyTicket',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentFrameIdx',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'drawing',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'endTimes',
    outputs: [
      {
        internalType: 'uint256',
        name: 'endTime',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'frameDuration',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'getDrawDetail',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'endTime',
            type: 'uint256',
          },
          {
            internalType: 'uint24[6]',
            name: 'luckyNumber',
            type: 'uint24[6]',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'jackpot',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchFive',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchFourAndLast',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchFour',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchThreeAndLast',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchThree',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchTwoAndLast',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchLast',
            type: 'tuple',
          },
        ],
        internalType: 'struct LotteryDeclaration.DrawDetailDto',
        name: 'result',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'page',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'size',
            type: 'uint256',
          },
        ],
        internalType: 'struct LotteryDeclaration.PaginationRequestDto',
        name: 'paginationDto',
        type: 'tuple',
      },
    ],
    name: 'getDrawList',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'endTime',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'frameIdx',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'isExist',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isFuture',
                type: 'bool',
              },
              {
                internalType: 'uint24[6]',
                name: 'luckyNumber',
                type: 'uint24[6]',
              },
              {
                internalType: 'address[]',
                name: 'jackpotWinners',
                type: 'address[]',
              },
              {
                internalType: 'address[]',
                name: 'matchFiveWinners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawStatisticDto[]',
            name: 'draws',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'totalPage',
            type: 'uint256',
          },
        ],
        internalType: 'struct LotteryDeclaration.DrawListDto',
        name: 'result',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getHomeStatistic',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'endTime',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'frameIdx',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'isExist',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isFuture',
                type: 'bool',
              },
              {
                internalType: 'uint24[6]',
                name: 'luckyNumber',
                type: 'uint24[6]',
              },
              {
                internalType: 'address[]',
                name: 'jackpotWinners',
                type: 'address[]',
              },
              {
                internalType: 'address[]',
                name: 'matchFiveWinners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawStatisticDto',
            name: 'nextDraw',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'endTime',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'frameIdx',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'isExist',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isFuture',
                type: 'bool',
              },
              {
                internalType: 'uint24[6]',
                name: 'luckyNumber',
                type: 'uint24[6]',
              },
              {
                internalType: 'address[]',
                name: 'jackpotWinners',
                type: 'address[]',
              },
              {
                internalType: 'address[]',
                name: 'matchFiveWinners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawStatisticDto',
            name: 'lastDraw',
            type: 'tuple',
          },
        ],
        internalType: 'struct LotteryDeclaration.HomeStatisticDto',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMyTicketList',
    outputs: [
      {
        components: [
          {
            internalType: 'uint24[6]',
            name: 'luckyNumber',
            type: 'uint24[6]',
          },
          {
            internalType: 'bool',
            name: 'isPowerPlay',
            type: 'bool',
          },
          {
            internalType: 'uint256',
            name: 'frameIdx',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'endTime',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'prize',
            type: 'uint256',
          },
        ],
        internalType: 'struct LotteryDeclaration.TicketDto[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_frameIdx',
        type: 'uint256',
      },
    ],
    name: 'getPrizeOfFrame',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'getTickets',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'isPowerPlay',
            type: 'bool',
          },
          {
            internalType: 'uint24[6]',
            name: 'luckyNumber',
            type: 'uint24[6]',
          },
        ],
        internalType: 'struct LotteryDeclaration.Ticket[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'getWinningHistoryByFrame',
    outputs: [
      {
        components: [
          {
            internalType: 'uint72',
            name: 'prize',
            type: 'uint72',
          },
          {
            internalType: 'uint72',
            name: 'ticketIdx',
            type: 'uint72',
          },
        ],
        internalType: 'struct LotteryDeclaration.Winning[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: '_endTime',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: '_frameDuration',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: '_ticketPrice',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: '_powerPlayPrice',
        type: 'uint128',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'isPaidForWinners',
    outputs: [
      {
        internalType: 'bool',
        name: 'isPaid',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPaused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'luckyNumbers',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'payForWinners',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'powerPlayPrice',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'prepareDrawing',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newEndTime',
        type: 'uint256',
      },
    ],
    name: 'restart',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'restart',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'currentEndTime',
        type: 'uint256',
      },
    ],
    name: 'setCurrentEndTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'shouldDrawing',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'shouldPreparingDrawing',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24[6]',
        name: '_luckyNumber',
        type: 'uint24[6]',
      },
    ],
    name: 'testDrawing',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ticketPrice',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'tickets',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'isPowerPlay',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'winningHistories',
    outputs: [
      {
        internalType: 'uint72',
        name: 'prize',
        type: 'uint72',
      },
      {
        internalType: 'uint72',
        name: 'ticketIdx',
        type: 'uint72',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
] as const;

const _bytecode =
  '0x60a0806040523461002a5730608052613ae390816100308239608051818181611a440152611b430152f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60e060003560e01c90816308c7dc7d146124665781630a959ce9146121ef5781631209b1f6146121c857816314f2979f146120ee5781631801f38e14611f685781631aae4fd814611f4c5781631aaed25914611f2b5781631ef3755d14611e42578163207aaa3214611e265781632f2043b814611e05578163488d92c214611dbf5781634ee5fc5d14611da35781634f1ef28614611abe57816352d1902d14611a2957816354f1d427146119f857816357e871e7146119d1578163648867ae146119b557816364ac9f2e146119995781636f58937614611978578163703ff1a61461195c57816374267637146117655781638456cb59146116e35781638c60212b14610fa35781638da5cb5b14610f7c5781639065e70f14610f4d578163932b37e014610f2157816399a62b0614610f055781639af622b514610e4b5781639db2415e14610e305781639f5c3d5914610e14578163a374e43f14610dc3578163a8109d0414610dbe578163ad3cb1cc14610d60578163b0e045ae14610d3b578163b187bd2614610d18578163b1f9028a14610cfc578163b28da7a314610cbb578163b34fda2a14610bf1578163b5a17a8014610bd5578163b77200b114610ba6578163c43c2d3d14610ae2578163d5984566146107a6578163d8d1ecf71461078a578163df4456cc1461073a578163ea50fbb01461067f578163ed21b1de146103e5575063fa868a350361000e576020806003193601126103e057600435906001600160a01b0391610252836000541633146126c6565b806000526008825260ff6040600020541661039c5780600052600682526040600020805461027f8161275c565b9161028d60405193846124f2565b8183526000908152848120858085015b84841061037e57505050505080519360005b8581106102d05760008481526008865260409020805460ff19166001179055005b68ffffffffffffffffff828487876001856102eb8886612800565b5151161461037157936103436000959461032e61032888979685899897899889526005815261031e8d60408b2094612800565b51015116906125d1565b506127c4565b51169161033b888b612800565b51511661340d565b90828215610368575bf11561035c576001905b016102af565b6040513d6000823e3d90fd5b506108fc61034c565b5050505050600190610356565b600191829161038c8561299a565b815201920192019190869061029d565b6064826040519062461bcd60e51b82526004820152601b60248201527f21697350616964466f7257696e6e6572735b6672616d654964785d00000000006044820152fd5b600080fd5b346103e05760006003193601126103e05760008060005460a09060a01c925b83811115610615575061042f6104198361275c565b9261042760405194856124f2565b80845261275c565b92601f19602094018460005b8281106105cd575050506000906000915b818311156104cc5750505050604051918083018184528251809152816040850193019160005b82811061047f5785850386f35b909192938261014060019260808851610499838251612515565b80850151151560c084015260408101518c8401526060810151610100840152015161012082015201950193929101610472565b6000969395969492945b85600052600590818952604060002080548210156105b357816104f8916125d1565b506001600160a01b0333915416036105aa576105a26001929361051b838a6139a8565b89600052858c526105308460406000206125d1565b50958a60005260048d52604060002054908d5260ff6105538660406000206125d1565b50548d1c1661056f87604051996105698b6124ba565b01612774565b885215158d8801528a6040880152606087015260808601526105908161295a565b9461059b8289612800565b5286612800565b505b016104d6565b600191506105a4565b5050509091936105c6909695939661295a565b919061044c565b6040516105d9816124ba565b6040516105e5816124d6565b60c0368237815260008382015260006040820152600060608201526000608082015282828801015201859061043b565b9360009392935b8560005260056020526040600020805482101561066b578161063d916125d1565b50546001600160a01b03163314610657575b60010161061c565b9361066360019161295a565b94905061064f565b50509361067a9093929361295a565b610404565b346103e05760006003193601126103e057610698613176565b506106a1613176565b6106a9613931565b9060018210156106fb575b6106c06106f79261359b565b81526040519182916020835260206106e382516040838701526060860190612643565b910151601f19848303016040850152612643565b0390f35b6000198201828111610724576106f7926107176106c09261359b565b60208401529250506106b4565b634e487b7160e01b600052601160045260246000fd5b346103e05761074836612542565b906000526006602052604060002080548210156103e05760409161076b916126ae565b505468ffffffffffffffffff825191818116835260481c166020820152f35b346103e05760006003193601126103e057602060405160458152f35b6101006003193601126103e057600435602490813591821515908184036103e05736606312156103e0576040516107dc816124d6565b806101043681116103e0576044915b818310610ac657505050333b610a8257600a8411610a185761080c816138b5565b156109d457610831846001966001546001600160801b038116916109c0575b506128b8565b340361097c5761083f613931565b60005b85811061084b57005b816000526020600581526040600020604051906108678261249e565b338252828201888152604083019187835280549068010000000000000000821015610967579061089b918d820181556125d1565b9390936109525751835491517fffffffffffffffffffffff000000000000000000000000000000000000000000929092166001600160a01b03919091161790151560a01b74ff000000000000000000000000000000000000000016178255518993926000928592909184905b6006821061091a57505050015501610842565b610945839662ffffff8395979496975116908660030260031b9162ffffff809116831b921b19161790565b9501920186939291610907565b88634e487b7160e01b60005260006004526000fd5b89634e487b7160e01b60005260416004526000fd5b60648260166040519162461bcd60e51b8352602060048401528201527f746f74616c436f7374203d3d206d73672e76616c7565000000000000000000006044820152fd5b906109ce9160801c906128cb565b8861082b565b60648260156040519162461bcd60e51b8352602060048401528201527f496e76616c6964207469636b6574206e756d62657200000000000000000000006044820152fd5b60848260216040519162461bcd60e51b8352602060048401528201527f5f616d6f756e74203c3d206d61785469636b6574416d6f756e7445616368427560448201527f79000000000000000000000000000000000000000000000000000000000000006064820152fd5b606482601b6040519162461bcd60e51b8352602060048401528201527f6d73672e73656e6465722e636f64652e6c656e677468203d3d203000000000006044820152fd5b823562ffffff811681036103e0578152602092830192016107eb565b346103e0576020806003193601126103e057600435600052600681526040600020908154610b0f8161275c565b90610b1d60405192836124f2565b8082528282018094600052836000206000915b838310610b8a5760408051878152865181890181905289928201908960005b828110610b5c5784840385f35b8551805168ffffffffffffffffff908116865290830151168483015294810194604090930192600101610b4f565b6001868192610b988561299a565b815201920192019190610b30565b346103e05760006003193601126103e057610bcd6001600160a01b036000541633146126c6565b610019612dcc565b346103e05760006003193601126103e057602060405160058152f35b346103e05760406003193601126103e057604051610c0e81612482565b6004358152610c2560209160243583820152612b90565b906040519181839283526060830191805192604083860152835180915260808501908360808260051b8801019501916000905b828210610c6e5750505050015160408301520390f35b91939480610ca9887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80600195979b849b030186528a51612643565b98019201920187969594939192610c58565b346103e05760206003193601126103e057600054610ce36001600160a01b03821633146126c6565b60a01c6000526004602052600435604060002055600080f35b346103e05760006003193601126103e057602060405160098152f35b346103e05760006003193601126103e057602060ff600354166040519015158152f35b346103e05760006003193601126103e0576020610d56612a7b565b6040519015158152f35b346103e05760006003193601126103e0576106f7604051610d8081612482565b600581527f352e302e300000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190612603565b612466565b346103e057610dd136612542565b906000526005602052604060002080548210156103e057604091610df4916125d1565b505460ff8251916001600160a01b038116835260a01c1615156020820152f35b346103e05760006003193601126103e057602060405160078152f35b346103e05760006003193601126103e0576020610d56612a61565b346103e0576020806003193601126103e0576004356000526006815260406000208054610e778161275c565b91610e8560405193846124f2565b8183526000908152838120848085015b848410610ee7575084516000908190875b818310610eb857505050604051908152f35b909192610ede600191610ed868ffffffffffffffffff61033b8887612800565b906128cb565b93019190610ea6565b6001918291610ef58561299a565b8152019201920191908590610e95565b346103e05760006003193601126103e0576020604051601a8152f35b346103e05760206003193601126103e05760043560005260046020526020604060002054604051908152f35b346103e05760006003193601126103e057610f746001600160a01b036000541633146126c6565b6100196129c5565b346103e05760006003193601126103e05760206001600160a01b0360005416604051908152f35b346103e05760206003193601126103e057604051610140810181811067ffffffffffffffff8211176116cd5760405260008152604051610fe2816124d6565b60c03682376020820152610ff4612940565b6040820152611001612940565b606082015261100e612940565b608082015261101b612940565b60a0820152611028612940565b60c0820152611035612940565b60e0820152611042612940565b610100820152611050612940565b61012082015260005460a01c6004351015611689576004356000526004602052604060002054815260043560005260076020526110906040600020612774565b6020820152670de0b6b3a76400006040820151526001600160801b036111208160015416826110be826133f0565b16606085015152826110cf826133d4565b16608085015152826110e0826133b9565b1660a085015152826110f1826133b9565b1660c085015152826111028261339e565b1660e085015152826111138261339e565b166101008501515261336b565b16610120820151526000906000806000806000916000938660009660043560005260066020526040600020549960005b8b811061158457506111c3946111996111d198956111b5956020606061118f6111e09f9e9c986111826111a799612969565b8460408701510152612969565b9201510152612969565b602060808d01510152612969565b602060a08b01510152612969565b602060c08901510152612969565b602060e08701510152612969565b60206101008501510152612969565b6101208201516020015260009182808080808080805b8881106112ec576106f78a604051918291602083528051602084015261122460208201516040850190612515565b60408101516112426101e091826101008701526102008601906125b1565b906101206112db6112c56112b061129b61128661127160608a015198601f19998d898c828503019101526125b1565b60808a01518c82038a016101408e01526125b1565b60a0890151888c8303016101608d01526125b1565b60c0880151878b8303016101808c01526125b1565b60e0870151868a8303016101a08b01526125b1565b61010086015185898303016101c08a01526125b1565b9301519185840301908501526125b1565b600435600052600660205261130e6113088260406000206126ae565b5061299a565b90600968ffffffffffffffffff83511614611550575b8a600868ffffffffffffffffff84511614611517575b82600768ffffffffffffffffff6001955116146114de575b600668ffffffffffffffffff825116146114a5575b600568ffffffffffffffffff8251161461146c575b600468ffffffffffffffffff82511614611433575b600368ffffffffffffffffff825116146113ff575b600268ffffffffffffffffff825116146113c3575b5050016111f6565b6113f460206101206113df6001600160a01b03946004356134ce565b94015101519b6113ee8161295a565b9c612800565b911690528a8d6113bb565b61140b816004356134ce565b6001600160a01b0361142a602061010086015101519b6113ee8161295a565b911690526113a6565b61143f816004356134ce565b6001600160a01b03611463602060e086015101519a61145d8161295a565b9b612800565b91169052611391565b611478816004356134ce565b6001600160a01b0361149c602060c08601510151996114968161295a565b9a612800565b9116905261137c565b6114b1816004356134ce565b6001600160a01b036114d5602060a08601510151986114cf8161295a565b99612800565b91169052611367565b6114ea816004356134ce565b6001600160a01b0361150e602060808601510151976115088161295a565b98612800565b91169052611352565b611523836004356134ce565b6060820151602001516115358f61295a565b9e61153f91612800565b906001600160a01b0316905261133a565b8a6001600160a01b0361157b6020604061156c876004356134ce565b94015101519a61145d8161295a565b91169052611324565b90919250600435600052600660205268ffffffffffffffffff6115ab8260406000206126ae565b50541660098114611679575b60088114611669575b60078114611659575b60068114611649575b60058114611639575b60048114611629575b60038114611615575b600214611601575b60010190899291611150565b9761160d60019161295a565b9890506115f5565b9761162160029161295a565b9890506115ed565b966116339061295a565b966115e4565b956116439061295a565b956115db565b946116539061295a565b946115d2565b936116639061295a565b936115c9565b926116739061295a565b926115c0565b916116839061295a565b916115b7565b606460405162461bcd60e51b815260206004820152601460248201527f44726177206973206e6f742068617070656e65640000000000000000000000006044820152fd5b634e487b7160e01b600052604160045260246000fd5b346103e05760006003193601126103e05761170a6001600160a01b036000541633146126c6565b60035460ff81166117215760ff1916600117600355005b606460405162461bcd60e51b815260206004820152601960248201527f4c6f747465727920697320616c726561647920706175736564000000000000006044820152fd5b346103e05760806003193601126103e0576004356001600160801b03908181168091036103e05760243582811681036103e057604435908382168092036103e05760643584811681036103e0577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009485549460ff8660401c16159567ffffffffffffffff811680159081611954575b600114908161194a575b159081611941575b50611917578660017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000083161789556118f8575b503373ffffffffffffffffffffffffffffffffffffffff1960005416178060005560a01c6000526004602052604060002055600254906fffffffffffffffffffffffffffffffff19809460801b1691161760025560801b161760015560ff19600354166003556118a557005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff19166801000000000000000117875587611839565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b90501589611806565b303b1591506117fe565b8891506117f4565b346103e05760006003193601126103e057602060405160038152f35b346103e05760006003193601126103e057602060005460a01c604051908152f35b346103e05760006003193601126103e057602060405160048152f35b346103e05760006003193601126103e0576020604051600a8152f35b346103e05760006003193601126103e05760206001600160801b0360025416604051908152f35b346103e05760206003193601126103e0576004356000526008602052602060ff604060002054166040519015158152f35b346103e05760006003193601126103e0576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a945760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b60406003193601126103e0576001600160a01b03600435818116908181036103e05760249283359167ffffffffffffffff83116103e057366023840112156103e057826004013591611b0f83612558565b90611b1d60405192836124f2565b83825260209384830195368983830101116103e057816000928a889301893784010152807f000000000000000000000000000000000000000000000000000000000000000016803014908115611d75575b50611a9457611b82906000541633146126c6565b6040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa60009181611d46575b50611bee578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103611d185750843b15611ce957508173ffffffffffffffffffffffffffffffffffffffff19825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115611cb5575060006100199481925190845af4903d15611cac573d611c8f81612558565b90611c9d60405192836124f2565b8152600081943d92013e613a1a565b60609250613a1a565b935050505034611cc157005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d8311611d6e575b611d5e81836124f2565b810103126103e057519088611bb9565b503d611d54565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141588611b6e565b346103e05760006003193601126103e057602060405160088152f35b346103e057611dcd36612542565b906000526007602052604060002060068210156103e057816003600a62ffffff938160209604015492060260031b1c16604051908152f35b346103e05760006003193601126103e057602060015460801c604051908152f35b346103e05760006003193601126103e057602060405160028152f35b346103e05760006003193601126103e057600054611e6a6001600160a01b03821633146126c6565b60035490611e7a60ff83166128f5565b60a01c6000526004602052604060002054421015611e9b5760ff1916600355005b60a460405162461bcd60e51b815260206004820152604d60248201527f596f752063616e206f6e6c79207265737461727420746f2063757272656e742060448201527f656e642074696d6520696620796f75206861766520706175736564206d6f726560648201527f207468616e2031206672616d65000000000000000000000000000000000000006084820152fd5b346103e05760006003193601126103e057602060025460801c604051908152f35b346103e05760006003193601126103e057602060405160068152f35b346103e0576020806003193601126103e057600054600435916001600160a01b03821691611f973384146126c6565b611fa560ff600354166128f5565b834210156120ab5760a01c91826000526004825242604060002054101561201b576bffffffffffffffffffffffff90818414610724576001600494019073ffffffffffffffffffffffffffffffffffffffff198260a01b1617600055166000525260406000205560ff1960035416600355600080f35b60a4826040519062461bcd60e51b82526004820152604960248201527f596f752063616e206f6e6c79207265737461727420746f206e657720656e642060448201527f74696d6520696620796f75206861766520706175736564206d6f72652074686160648201527f6e2031206672616d6500000000000000000000000000000000000000000000006084820152fd5b6064826040519062461bcd60e51b825280600483015260248201527f6e6577456e6454696d65206d7573742067726561746572207468616e206e6f776044820152fd5b346103e0576020806003193601126103e05760043560005260058152604060002090815461211b8161275c565b9061212960405192836124f2565b8082528282018094600052836000206000915b8383106121ab5760408051878152865181890181905289928201908960005b8281106121685784840385f35b9091928261010060019261219c60408a516001600160a01b0381511684528581015115158685015201516040830190612515565b0196019101949291909461215b565b6002866001926121ba856127c4565b81520192019201919061213c565b346103e05760006003193601126103e05760206001600160801b0360015416604051908152f35b346103e05760c06003193601126103e05736602312156103e057604051612215816124d6565b8060c43660c4116103e0576004915b81831061244a57836000546001600160a01b0361224481831633146126c6565b60029261225d6001600160801b03600254161515612711565b60a092831c6000526020916005835260406000209485549061227e8261275c565b9661228c60405198896124f2565b828852600090815285812086808a015b85841061242c5750505050505084519160005b68ffffffffffffffffff8082169085821015612333576122dd60406122d4848c612800565b510151856131a9565b16600181036122ff575b5050600168ffffffffffffffffff80921601166122af565b61232c916040519161231083612482565b825287820152600054881c600052600687526040600020612814565b87806122e7565b87858886600054841c60005260078252604060002060009160005b84600682106123fa5750505055600254906fffffffffffffffffffffffffffffffff19821660025560ff600354161561238357005b6004906bffffffffffffffffffffffff6123bc6123b6600054881c95866000528585526040600020549060801c906128cb565b946128d8565b166000525260406000205573ffffffffffffffffffffffffffffffffffffffff19600054926123ec84821c6128d8565b901b16911617600055600080f35b612423839562ffffff600194955116908560030260031b9162ffffff809116831b921b19161790565b9401910161234e565b600191859161243a856127c4565b815201920192019190879061229c565b823562ffffff811681036103e057815260209283019201612224565b346103e05760006003193601126103e057602060405160018152f35b6040810190811067ffffffffffffffff8211176116cd57604052565b6060810190811067ffffffffffffffff8211176116cd57604052565b60a0810190811067ffffffffffffffff8211176116cd57604052565b60c0810190811067ffffffffffffffff8211176116cd57604052565b90601f601f19910116810190811067ffffffffffffffff8211176116cd57604052565b6000915b6006831061252657505050565b60019062ffffff83511681526020809101920192019190612519565b60031960409101126103e0576004359060243590565b67ffffffffffffffff81116116cd57601f01601f191660200190565b90815180825260208080930193019160005b828110612594575050505090565b83516001600160a01b031685529381019392810192600101612586565b90604060206125ce93805184520151918160208201520190612574565b90565b80548210156125ed5760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b919082519283825260005b84811061262f575050601f19601f8460006020809697860101520116010190565b60208183018101518483018201520161260e565b6125ce9160c061269c610180845184526020850151602085015260408501511515604085015260608501511515606085015261268760808601516080860190612515565b60a08501519080610140860152840190612574565b92015190610160818403910152612574565b80548210156125ed5760005260206000200190600090565b156126cd57565b606460405162461bcd60e51b815260206004820152601360248201527f6d73672e73656e646572203d3d206f776e6572000000000000000000000000006044820152fd5b1561271857565b606460405162461bcd60e51b815260206004820152600f60248201527f626c6f636b4e756d626572203e203000000000000000000000000000000000006044820152fd5b67ffffffffffffffff81116116cd5760051b60200190565b90604051915462ffffff908181168452818160181c166020850152818160301c166040850152818160481c166060850152818160601c16608085015260781c1660a08301526127c2826124d6565b565b906040516127d18161249e565b60406127fb6001839560ff81546001600160a01b038116875260a01c161515602086015201612774565b910152565b80518210156125ed5760209160051b010190565b8054680100000000000000008110156116cd57612836916001820181556126ae565b9190916128a25768ffffffffffffffffff8151167fffffffffffffffffffffffffffff00000000000000000000000000000000000071ffffffffffffffffff00000000000000000060208554948468ffffffffffffffffff198716178755015160481b16921617179055565b634e487b7160e01b600052600060045260246000fd5b8181029291811591840414171561072457565b9190820180921161072457565b9060016bffffffffffffffffffffffff8093160191821161072457565b156128fc57565b606460405162461bcd60e51b815260206004820152601a60248201527f4c6f747465727920697320616c726561647920737461727465640000000000006044820152fd5b6040519061294d82612482565b6060602083600081520152565b60001981146107245760010190565b906129738261275c565b61298060405191826124f2565b828152601f19612990829461275c565b0190602036910137565b906040516129a781612482565b602081935468ffffffffffffffffff90818116845260481c16910152565b60005460a01c6000526004602052604060002054804210612a1d576129e990613504565b6127c25760014301804311610724576001600160801b03166fffffffffffffffffffffffffffffffff196002541617600255565b606460405162461bcd60e51b815260206004820152600f60248201527f4672616d65206e6f7420656e64656400000000000000000000000000000000006044820152fd5b6001600160801b0360025416612a7657600090565b600190565b612abb604051612a8a81612482565b600f81527f626c6f636b2e74696d657374616d7000000000000000000000000000000000006020820152429061352a565b6000805460a01c8082526004602052612b0d6040832054604051612ade81612482565b601981527f656e6454696d65735b63757272656e744672616d654964785d00000000000000602082015261352a565b815260046020526040812054421015612b235790565b50600190565b9190820391821161072457565b6040519060e0820182811067ffffffffffffffff8211176116cd57604052606060c083600081526000602082015260006040820152600083820152604051612b7d816124d6565b8236823760808201528260a08201520152565b60405190612b9d82612482565b606082526020808301600090818152846001855110612d8857825460a01c918215612d7d57505083519060001994858301928311612d1d5784612be49101928351906128b8565b825192612bf0836128d8565b9051908115612d69576bffffffffffffffffffffffff160460018101809111612d555785880152808210612d4c57612c2791612b29565b90848201918211612cf35780821015612d31575081925b612c488483612b29565b9060018201809211612d1d57601f19612c79612c638461275c565b93612c7160405195866124f2565b80855261275c565b01845b818110612d0757505050855281905b83811215612c9b57505050505090565b612cc4612ca78261359b565b928751612cb38261295a565b94612cbe8383612800565b52612800565b507f80000000000000000000000000000000000000000000000000000000000000008114612cf3578401612c8b565b602483634e487b7160e01b81526011600452fd5b8290612d11612b36565b82828701015201612c7c565b602484634e487b7160e01b81526011600452fd5b612d3b9082612b29565b60018101809111612cf35792612c3e565b50505050505090565b602485634e487b7160e01b81526011600452fd5b602486634e487b7160e01b81526012600452fd5b935094505091505290565b6064846040519062461bcd60e51b82526004820152601c60248201527f50616765206d7573742067726561746572206f7220657175616c2031000000006044820152fd5b600090815460a01c918281526004926020848152604092612def84822054613504565b61316e576002936001600160801b036002541694612e0e861515612711565b815195612e1a876124d6565b60c0368837610100810180821161315b5743116130f3574094835b600580821015612eab57828652865283852054845187810191898352868201526060838183015281526080810181811067ffffffffffffffff821117612e98578652519020600191906044900662ffffff16612e91828b613198565b5201612e35565b60248860418f634e487b7160e01b835252fd5b5050969293959094919487855260058752858520548651908882019485528782015260056060820152606081526080810181811067ffffffffffffffff8211176130e0578752601962ffffff948592519020061660a08301528785526005875285852090815490612f1b8261275c565b92612f28895194856124f2565b828452875288872087908a8086015b8584106130c257505050505050805193855b68ffffffffffffffffff8082169087821015612fc457612f768a612f6d8488612800565b510151876131a9565b1660018103612f98575b5050600168ffffffffffffffffff8092160116612f49565b612fbd918a5191612fa883612482565b82528b8201528b895260068b52898920612814565b3880612f80565b50505097855250600786528484209697939687935091835b8760068210613091575050505055600254926fffffffffffffffffffffffffffffffff19841660025560ff6003541615613018575b5050505050565b6bffffffffffffffffffffffff61304b613045875460a01c96878952858552868920549060801c906128cb565b956128d8565b1685525282205580546001600160a01b0373ffffffffffffffffffffffffffffffffffffffff1961307e8360a01c6128d8565b60a01b1691161790553880808080613011565b6130b884968460019495965116908560030260031b9162ffffff809116831b921b19161790565b9501929101612fdc565b60019185916130d0856127c4565b8152019201920191908b90612f37565b60248760418d634e487b7160e01b835252fd5b6084898685519162461bcd60e51b8352820152602760248201527f43616e206e6f74206765742068617368206f66206d6f7265207468616e20323560448201527f3620626c6f636b000000000000000000000000000000000000000000000000006064820152fd5b60248560118c634e487b7160e01b835252fd5b505050509050565b6040519061318382612482565b8161318c612b36565b815260206127fb612b36565b9060068110156125ed5760051b0190565b604051909260006131b9836124d6565b60059081845260a0366020860137805b84518110156131f6578062ffffff6131e36001938a613198565b51166131ef8288612800565b52016131c9565b50929490939194835b85811061330c57505060a09081015191015162ffffff9081169116036132ce57600281101561322f575050600290565b6002810361323e575050600390565b6003810361324a575090565b60048103613259575050600790565b146132c957505b608460405162461bcd60e51b8152602060048201526024808201527f43616e206e6f742066696e64207072697a652061742063616c63756c6174655060448201527f72697a65000000000000000000000000000000000000000000000000000000006064820152fd5b600990565b60038110156132de575050600190565b600381036132ed575050600490565b600481036132fc575050600690565b146133075750613260565b600890565b60005b868110613320575b506001016131ff565b62ffffff8061332f8488613198565b51169061333c8386612800565b51161461334b5760010161330f565b60019195600061335e6133649386612800565b5261295a565b9490613317565b60021b907003fffffffffffffffffffffffffffffffc6ffffffffffffffffffffffffffffffffc83169216820361072457565b906001600160801b0380921660070291821691820361072457565b906001600160801b0380921660640291821691820361072457565b906001600160801b0380921661c3500291821691820361072457565b906001600160801b03809216620f42400291821691820361072457565b6001908181146134c757600281146134b2576003811461349d576004811461349d5760058114613488576006811461348857600781146134735760081461345b5750670de0b6b3a764000090565b61346f6001600160801b03809254166133f0565b1690565b5061346f6001600160801b03809254166133d4565b5061346f6001600160801b03809254166133b9565b5061346f6001600160801b038092541661339e565b5061346f6001600160801b038092541661336b565b5050600090565b6001600160a01b03916134fe91600052600560205268ffffffffffffffffff6020604060002092015116906125d1565b50541690565b60ff600354169081613514575090565b905061352560025460801c426128cb565b101590565b600091908291613588604051809261357460208301957fb60e72cc000000000000000000000000000000000000000000000000000000008752604060248501526064840190612603565b90604483015203601f1981018352826124f2565b51906a636f6e736f6c652e6c6f675afa50565b6135a3612b36565b91600160408181860152600090815460a01c8086101561387957506020959392949586818601528683526004808252828420548652878452600782526135ea838520612774565b6080870152839784918886905b613778575b505061361c61360f899a99979899612969565b9260a08a01938452612969565b9360c08901948552858093819b5b61363d575b505050505050505050909150565b8382526006808752838320548d101561377257828a5b613664575b50509a88019a8861362a565b8d8452818852848420805482101561376c57818f6136858e959486946126ae565b5090600968ffffffffffffffffff8093541614613712575b808852848c526008826136b2858c8c206126ae565b505416146136c5575b5050019091613653565b6001600160a01b03916136f8918952858d526136e3848b8b206126ae565b505460481c168a895260058d528989206125d1565b50541661370a8c519a61145d8161295a565b528f806136bb565b808852848c528d82848b8b2090613728916126ae565b505460481c168d8c8b52600590528a8a2090613743916125d1565b50546001600160a01b0316908851909f61375c9061295a565b9f61376691612800565b5261369d565b50613658565b5061362f565b82879b9a98999b5260068086528688205482101561386e578892919088845b6137ab575b505082019091999a98976135f7565b90918093945089528187528789208a81548310156138655750816137ce916126ae565b50600968ffffffffffffffffff8092541614613837575b9060088b926137fc838c8e888e8b835252206126ae565b50541614613811575b81018194939291613797565b9590810180911161382457948990613805565b602489601186634e487b7160e01b835252fd5b9c9b8a819c9b9a9c01809111613852579b9c999a98996137e5565b60248c601187634e487b7160e01b835252fd5b9493925061379c565b5099979698996135fc565b61389f90610ed8928794899860206138ab98999b01528281526004602052205493612b29565b60025460801c906128b8565b8252606082015290565b60005b600581106138f1575060a062ffffff91015116600181109081156138e6575b506138e157600190565b600090565b601a915011386138d7565b62ffffff6001816139028486613198565b51161090811561391a575b506134c7576001016138b8565b604591506139288385613198565b5116113861390d565b60005460a01c80600052600460205260406000205442106125ce5760ff6003541661396457600181018091116107245790565b606460405162461bcd60e51b815260206004820152601160248201527f4c6f7474657279206973207061757365640000000000000000000000000000006044820152fd5b9160005b836000526006602090808252604090816000208054851015613a0d57846139d2916126ae565b50928668ffffffffffffffffff80955460481c16146139f757505050506001016139ac565b90919295506134fe9496600052526000206126ae565b5050505050915050600190565b90613a595750805115613a2f57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580613aa4575b613a6a575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15613a6256fea2646970667358221220601018dc4e672d12506a462a4829c531062d359e7a8348a3a443acec17f8f63264736f6c63430008180033';

type LotteryTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryTestConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryTest__factory extends ContractFactory {
  constructor(...args: LotteryTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LotteryTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LotteryTest__factory {
    return super.connect(runner) as LotteryTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryTestInterface {
    return new Interface(_abi) as LotteryTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LotteryTest {
    return new Contract(address, _abi, runner) as unknown as LotteryTest;
  }
}
