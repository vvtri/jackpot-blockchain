/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LotteryTest,
  LotteryTestInterface,
} from "../../../contracts/test/LotteryTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FIVE_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FOUR_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FOUR_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_JACKPOT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_NOT_LUCKY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_THREE_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_THREE_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_TWO_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LUCKY_NUMBER_LAST_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LUCKY_NUMBER_NORMAL_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_TICKET_AMOUNT_EACH_BUY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_LUCKY_NUMBER_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPowerPlay",
        type: "bool",
      },
      {
        internalType: "uint24[6]",
        name: "_ticketNumber",
        type: "uint24[6]",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentFrameIdx",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "endTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frameDuration",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getDrawDetail",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "jackpot",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFive",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFourAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchThreeAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchThree",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchTwoAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchLast",
            type: "tuple",
          },
        ],
        internalType: "struct LotteryDeclaration.DrawDetailDto",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "page",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.PaginationRequestDto",
        name: "paginationDto",
        type: "tuple",
      },
    ],
    name: "getDrawList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto[]",
            name: "draws",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "totalPage",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.DrawListDto",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHomeStatistic",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto",
            name: "nextDraw",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto",
            name: "lastDraw",
            type: "tuple",
          },
        ],
        internalType: "struct LotteryDeclaration.HomeStatisticDto",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTicketList",
    outputs: [
      {
        components: [
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
          {
            internalType: "bool",
            name: "isPowerPlay",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "frameIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prize",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.TicketDto[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_frameIdx",
        type: "uint256",
      },
    ],
    name: "getPrizeOfFrame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getTickets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPowerPlay",
            type: "bool",
          },
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
        ],
        internalType: "struct LotteryDeclaration.Ticket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getWinningHistoryByFrame",
    outputs: [
      {
        components: [
          {
            internalType: "uint72",
            name: "prize",
            type: "uint72",
          },
          {
            internalType: "uint72",
            name: "ticketIdx",
            type: "uint72",
          },
        ],
        internalType: "struct LotteryDeclaration.Winning[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endTime",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_frameDuration",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_ticketPrice",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_powerPlayPrice",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_automationOracle",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "isPaidForWinners",
    outputs: [
      {
        internalType: "bool",
        name: "isPaid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "luckyNumbers",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "payForWinners",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "powerPlayPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prepareDrawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newEndTime",
        type: "uint256",
      },
    ],
    name: "restart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "restart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentEndTime",
        type: "uint256",
      },
    ],
    name: "setCurrentEndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldDrawing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldPreparingDrawing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24[6]",
        name: "_luckyNumber",
        type: "uint24[6]",
      },
    ],
    name: "testDrawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isPowerPlay",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winningHistories",
    outputs: [
      {
        internalType: "uint72",
        name: "prize",
        type: "uint72",
      },
      {
        internalType: "uint72",
        name: "ticketIdx",
        type: "uint72",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523461002a5730608052613be59081610030823960805181818161185801526119570152f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60e060003560e01c90816308c7dc7d146125075781630a959ce9146122905781631209b1f61461226957816314f2979f1461218f5781631801f38e146120095781631aae4fd814611fed5781631aaed25914611fcc5781631ef3755d14611ee3578163207aaa3214611ec75781632f2043b814611ea65781632fd6fc2714611c605781633ccfd60b14611c19578163488d92c214611bd35781634ee5fc5d14611bb75781634f1ef286146118d257816352d1902d1461183d57816354f1d4271461180c57816357e871e7146117e5578163648867ae146117c957816364ac9f2e146117ad5781636f5893761461178c578163703ff1a6146117705781638456cb59146116ee5781638c60212b14610fae5781638da5cb5b14610f875781639065e70f14610f58578163932b37e014610f2c57816399a62b0614610f105781639af622b514610e565781639db2415e14610e3b5781639f5c3d5914610e1f578163a374e43f14610dce578163a8109d0414610dc9578163ad3cb1cc14610d6b578163b0e045ae14610d46578163b187bd2614610d23578163b1f9028a14610d07578163b28da7a314610cc6578163b34fda2a14610bfc578163b5a17a8014610be0578163b77200b114610bb1578163c43c2d3d14610aed578163d5984566146107b1578163d8d1ecf714610795578163df4456cc14610745578163ea50fbb01461068a578163ed21b1de146103f0575063fa868a350361000e576020806003193601126103eb57600435906001600160a01b039161025d83600054163314612767565b806000526008825260ff604060002054166103a75780600052600682526040600020805461028a816127fd565b916102986040519384612593565b8183526000908152848120858085015b84841061038957505050505080519360005b8581106102db5760008481526008865260409020805460ff19166001179055005b68ffffffffffffffffff828487876001856102f688866128a1565b5151161461037c579361034e600095946103396103338897968589989789988952600581526103298d60408b20946128a1565b5101511690612672565b50612865565b511691610346888b6128a1565b51511661350f565b90828215610373575bf115610367576001905b016102ba565b6040513d6000823e3d90fd5b506108fc610357565b5050505050600190610361565b600191829161039785612a3b565b81520192019201919086906102a8565b6064826040519062461bcd60e51b82526004820152601b60248201527f21697350616964466f7257696e6e6572735b6672616d654964785d00000000006044820152fd5b600080fd5b346103eb5760006003193601126103eb5760008060005460a09060a01c925b83811115610620575061043a610424836127fd565b926104326040519485612593565b8084526127fd565b92601f19602094018460005b8281106105d8575050506000906000915b818311156104d75750505050604051918083018184528251809152816040850193019160005b82811061048a5785850386f35b9091929382610140600192608088516104a48382516125b6565b80850151151560c084015260408101518c840152606081015161010084015201516101208201520195019392910161047d565b6000969395969492945b85600052600590818952604060002080548210156105be578161050391612672565b506001600160a01b0333915416036105b5576105ad60019293610526838a613aaa565b89600052858c5261053b846040600020612672565b50958a60005260048d52604060002054908d5260ff61055e866040600020612672565b50548d1c1661057a87604051996105748b61255b565b01612815565b885215158d8801528a60408801526060870152608086015261059b816129fb565b946105a682896128a1565b52866128a1565b505b016104e1565b600191506105af565b5050509091936105d190969593966129fb565b9190610457565b6040516105e48161255b565b6040516105f081612577565b60c03682378152600083820152600060408201526000606082015260006080820152828288010152018590610446565b9360009392935b85600052600560205260406000208054821015610676578161064891612672565b50546001600160a01b03163314610662575b600101610627565b9361066e6001916129fb565b94905061065a565b505093610685909392936129fb565b61040f565b346103eb5760006003193601126103eb576106a3613278565b506106ac613278565b6106b4613a33565b906001821015610706575b6106cb6107029261369d565b81526040519182916020835260206106ee825160408387015260608601906126e4565b910151601f198483030160408501526126e4565b0390f35b600019820182811161072f57610702926107226106cb9261369d565b60208401529250506106bf565b634e487b7160e01b600052601160045260246000fd5b346103eb57610753366125e3565b906000526006602052604060002080548210156103eb576040916107769161274f565b505468ffffffffffffffffff825191818116835260481c166020820152f35b346103eb5760006003193601126103eb57602060405160458152f35b6101006003193601126103eb57600435602490813591821515908184036103eb5736606312156103eb576040516107e781612577565b806101043681116103eb576044915b818310610ad157505050333b610a8d57600a8411610a2357610817816139b7565b156109df5761083c846001966001546001600160801b038116916109cb575b50612959565b34036109875761084a613a33565b60005b85811061085657005b816000526020600581526040600020604051906108728261253f565b33825282820188815260408301918783528054906801000000000000000082101561097257906108a6918d82018155612672565b93909361095d5751835491517fffffffffffffffffffffff000000000000000000000000000000000000000000929092166001600160a01b03919091161790151560a01b74ff000000000000000000000000000000000000000016178255518993926000928592909184905b600682106109255750505001550161084d565b610950839662ffffff8395979496975116908660030260031b9162ffffff809116831b921b19161790565b9501920186939291610912565b88634e487b7160e01b60005260006004526000fd5b89634e487b7160e01b60005260416004526000fd5b60648260166040519162461bcd60e51b8352602060048401528201527f746f74616c436f7374203d3d206d73672e76616c7565000000000000000000006044820152fd5b906109d99160801c9061296c565b88610836565b60648260156040519162461bcd60e51b8352602060048401528201527f496e76616c6964207469636b6574206e756d62657200000000000000000000006044820152fd5b60848260216040519162461bcd60e51b8352602060048401528201527f5f616d6f756e74203c3d206d61785469636b6574416d6f756e7445616368427560448201527f79000000000000000000000000000000000000000000000000000000000000006064820152fd5b606482601b6040519162461bcd60e51b8352602060048401528201527f6d73672e73656e6465722e636f64652e6c656e677468203d3d203000000000006044820152fd5b823562ffffff811681036103eb578152602092830192016107f6565b346103eb576020806003193601126103eb57600435600052600681526040600020908154610b1a816127fd565b90610b286040519283612593565b8082528282018094600052836000206000915b838310610b955760408051878152865181890181905289928201908960005b828110610b675784840385f35b8551805168ffffffffffffffffff908116865290830151168483015294810194604090930192600101610b5a565b6001868192610ba385612a3b565b815201920192019190610b3b565b346103eb5760006003193601126103eb57610bd86001600160a01b03600054163314612767565b610019612e6d565b346103eb5760006003193601126103eb57602060405160058152f35b346103eb5760406003193601126103eb57604051610c1981612523565b6004358152610c3060209160243583820152612c31565b906040519181839283526060830191805192604083860152835180915260808501908360808260051b8801019501916000905b828210610c795750505050015160408301520390f35b91939480610cb4887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80600195979b849b030186528a516126e4565b98019201920187969594939192610c63565b346103eb5760206003193601126103eb57600054610cee6001600160a01b0382163314612767565b60a01c6000526004602052600435604060002055600080f35b346103eb5760006003193601126103eb57602060405160098152f35b346103eb5760006003193601126103eb57602060ff600354166040519015158152f35b346103eb5760006003193601126103eb576020610d61612b1c565b6040519015158152f35b346103eb5760006003193601126103eb57610702604051610d8b81612523565b600581527f352e302e3000000000000000000000000000000000000000000000000000000060208201526040519182916020835260208301906126a4565b612507565b346103eb57610ddc366125e3565b906000526005602052604060002080548210156103eb57604091610dff91612672565b505460ff8251916001600160a01b038116835260a01c1615156020820152f35b346103eb5760006003193601126103eb57602060405160078152f35b346103eb5760006003193601126103eb576020610d61612b02565b346103eb576020806003193601126103eb576004356000526006815260406000208054610e82816127fd565b91610e906040519384612593565b8183526000908152838120848085015b848410610ef2575084516000908190875b818310610ec357505050604051908152f35b909192610ee9600191610ee368ffffffffffffffffff61034688876128a1565b9061296c565b93019190610eb1565b6001918291610f0085612a3b565b8152019201920191908590610ea0565b346103eb5760006003193601126103eb576020604051601a8152f35b346103eb5760206003193601126103eb5760043560005260046020526020604060002054604051908152f35b346103eb5760006003193601126103eb57610f7f6001600160a01b03600054163314612767565b610019612a66565b346103eb5760006003193601126103eb5760206001600160a01b0360005416604051908152f35b346103eb5760206003193601126103eb57604051610140810181811067ffffffffffffffff8211176116d85760405260008152604051610fed81612577565b60c03682376020820152610fff6129e1565b604082015261100c6129e1565b60608201526110196129e1565b60808201526110266129e1565b60a08201526110336129e1565b60c08201526110406129e1565b60e082015261104d6129e1565b61010082015261105b6129e1565b61012082015260005460a01c60043510156116945760043560005260046020526040600020548152600435600052600760205261109b6040600020612815565b6020820152670de0b6b3a76400006040820151526001600160801b0361112b8160015416826110c9826134f2565b16606085015152826110da826134d6565b16608085015152826110eb826134bb565b1660a085015152826110fc826134bb565b1660c0850151528261110d826134a0565b1660e0850151528261111e826134a0565b166101008501515261346d565b16610120820151526000906000806000806000916000938660009660043560005260066020526040600020549960005b8b811061158f57506111ce946111a46111dc98956111c0956020606061119a6111eb9f9e9c9861118d6111b299612a0a565b8460408701510152612a0a565b9201510152612a0a565b602060808d01510152612a0a565b602060a08b01510152612a0a565b602060c08901510152612a0a565b602060e08701510152612a0a565b60206101008501510152612a0a565b6101208201516020015260009182808080808080805b8881106112f7576107028a604051918291602083528051602084015261122f602082015160408501906125b6565b604081015161124d6101e09182610100870152610200860190612652565b906101206112e66112d06112bb6112a661129161127c60608a015198601f19998d898c82850301910152612652565b60808a01518c82038a016101408e0152612652565b60a0890151888c8303016101608d0152612652565b60c0880151878b8303016101808c0152612652565b60e0870151868a8303016101a08b0152612652565b61010086015185898303016101c08a0152612652565b930151918584030190850152612652565b600435600052600660205261131961131382604060002061274f565b50612a3b565b90600968ffffffffffffffffff8351161461155b575b8a600868ffffffffffffffffff84511614611522575b82600768ffffffffffffffffff6001955116146114e9575b600668ffffffffffffffffff825116146114b0575b600568ffffffffffffffffff82511614611477575b600468ffffffffffffffffff8251161461143e575b600368ffffffffffffffffff8251161461140a575b600268ffffffffffffffffff825116146113ce575b505001611201565b6113ff60206101206113ea6001600160a01b03946004356135d0565b94015101519b6113f9816129fb565b9c6128a1565b911690528a8d6113c6565b611416816004356135d0565b6001600160a01b03611435602061010086015101519b6113f9816129fb565b911690526113b1565b61144a816004356135d0565b6001600160a01b0361146e602060e086015101519a611468816129fb565b9b6128a1565b9116905261139c565b611483816004356135d0565b6001600160a01b036114a7602060c08601510151996114a1816129fb565b9a6128a1565b91169052611387565b6114bc816004356135d0565b6001600160a01b036114e0602060a08601510151986114da816129fb565b996128a1565b91169052611372565b6114f5816004356135d0565b6001600160a01b0361151960206080860151015197611513816129fb565b986128a1565b9116905261135d565b61152e836004356135d0565b6060820151602001516115408f6129fb565b9e61154a916128a1565b906001600160a01b03169052611345565b8a6001600160a01b0361158660206040611577876004356135d0565b94015101519a611468816129fb565b9116905261132f565b90919250600435600052600660205268ffffffffffffffffff6115b682604060002061274f565b50541660098114611684575b60088114611674575b60078114611664575b60068114611654575b60058114611644575b60048114611634575b60038114611620575b60021461160c575b6001019089929161115b565b976116186001916129fb565b989050611600565b9761162c6002916129fb565b9890506115f8565b9661163e906129fb565b966115ef565b9561164e906129fb565b956115e6565b9461165e906129fb565b946115dd565b9361166e906129fb565b936115d4565b9261167e906129fb565b926115cb565b9161168e906129fb565b916115c2565b606460405162461bcd60e51b815260206004820152601460248201527f44726177206973206e6f742068617070656e65640000000000000000000000006044820152fd5b634e487b7160e01b600052604160045260246000fd5b346103eb5760006003193601126103eb576117156001600160a01b03600054163314612767565b60035460ff811661172c5760ff1916600117600355005b606460405162461bcd60e51b815260206004820152601960248201527f4c6f747465727920697320616c726561647920706175736564000000000000006044820152fd5b346103eb5760006003193601126103eb57602060405160038152f35b346103eb5760006003193601126103eb57602060005460a01c604051908152f35b346103eb5760006003193601126103eb57602060405160048152f35b346103eb5760006003193601126103eb576020604051600a8152f35b346103eb5760006003193601126103eb5760206001600160801b0360025416604051908152f35b346103eb5760206003193601126103eb576004356000526008602052602060ff604060002054166040519015158152f35b346103eb5760006003193601126103eb576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036118a85760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b60406003193601126103eb576001600160a01b03600435818116908181036103eb5760249283359167ffffffffffffffff83116103eb57366023840112156103eb57826004013591611923836125f9565b906119316040519283612593565b83825260209384830195368983830101116103eb57816000928a889301893784010152807f000000000000000000000000000000000000000000000000000000000000000016803014908115611b89575b506118a85761199690600054163314612767565b6040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa60009181611b5a575b50611a02578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103611b2c5750843b15611afd57508173ffffffffffffffffffffffffffffffffffffffff19825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115611ac9575060006100199481925190845af4903d15611ac0573d611aa3816125f9565b90611ab16040519283612593565b8152600081943d92013e613b1c565b60609250613b1c565b935050505034611ad557005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d8311611b82575b611b728183612593565b810103126103eb575190886119cd565b503d611b68565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141588611982565b346103eb5760006003193601126103eb57602060405160088152f35b346103eb57611be1366125e3565b906000526007602052604060002060068210156103eb57816003600a62ffffff938160209604015492060260031b1c16604051908152f35b346103eb5760006003193601126103eb5760008080806001600160a01b03815416611c45813314612767565b4790828215611c57575bf11561036757005b506108fc611c4f565b346103eb5760a06003193601126103eb576004356001600160801b03908181168091036103eb5760243582811681036103eb576044358381168091036103eb576064359184831683036103eb57608435926001600160a01b03841684036103eb577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009586549560ff8760401c16159667ffffffffffffffff811680159081611e9e575b6001149081611e94575b159081611e8b575b50611e61578760017fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008316178a55611e42575b503373ffffffffffffffffffffffffffffffffffffffff1960005416178060005560a01c6000526004602052604060002055600254906fffffffffffffffffffffffffffffffff19809460801b1691161760025560801b16176001557fffffffffffffffffffffff00000000000000000000000000000000000000000074ffffffffffffffffffffffffffffffffffffffff006003549260081b16911617600355611def57005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff19166801000000000000000117885588611d48565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050158a611d15565b303b159150611d0d565b899150611d03565b346103eb5760006003193601126103eb57602060015460801c604051908152f35b346103eb5760006003193601126103eb57602060405160028152f35b346103eb5760006003193601126103eb57600054611f0b6001600160a01b0382163314612767565b60035490611f1b60ff8316612996565b60a01c6000526004602052604060002054421015611f3c5760ff1916600355005b60a460405162461bcd60e51b815260206004820152604d60248201527f596f752063616e206f6e6c79207265737461727420746f2063757272656e742060448201527f656e642074696d6520696620796f75206861766520706175736564206d6f726560648201527f207468616e2031206672616d65000000000000000000000000000000000000006084820152fd5b346103eb5760006003193601126103eb57602060025460801c604051908152f35b346103eb5760006003193601126103eb57602060405160068152f35b346103eb576020806003193601126103eb57600054600435916001600160a01b03821691612038338414612767565b61204660ff60035416612996565b8342101561214c5760a01c9182600052600482524260406000205410156120bc576bffffffffffffffffffffffff9081841461072f576001600494019073ffffffffffffffffffffffffffffffffffffffff198260a01b1617600055166000525260406000205560ff1960035416600355600080f35b60a4826040519062461bcd60e51b82526004820152604960248201527f596f752063616e206f6e6c79207265737461727420746f206e657720656e642060448201527f74696d6520696620796f75206861766520706175736564206d6f72652074686160648201527f6e2031206672616d6500000000000000000000000000000000000000000000006084820152fd5b6064826040519062461bcd60e51b825280600483015260248201527f6e6577456e6454696d65206d7573742067726561746572207468616e206e6f776044820152fd5b346103eb576020806003193601126103eb576004356000526005815260406000209081546121bc816127fd565b906121ca6040519283612593565b8082528282018094600052836000206000915b83831061224c5760408051878152865181890181905289928201908960005b8281106122095784840385f35b9091928261010060019261223d60408a516001600160a01b03815116845285810151151586850152015160408301906125b6565b019601910194929190946121fc565b60028660019261225b85612865565b8152019201920191906121dd565b346103eb5760006003193601126103eb5760206001600160801b0360015416604051908152f35b346103eb5760c06003193601126103eb5736602312156103eb576040516122b681612577565b8060c43660c4116103eb576004915b8183106124eb57836000546001600160a01b036122e58183163314612767565b6002926122fe6001600160801b036002541615156127b2565b60a092831c6000526020916005835260406000209485549061231f826127fd565b9661232d6040519889612593565b828852600090815285812086808a015b8584106124cd5750505050505084519160005b68ffffffffffffffffff80821690858210156123d45761237e6040612375848c6128a1565b510151856132ab565b16600181036123a0575b5050600168ffffffffffffffffff8092160116612350565b6123cd91604051916123b183612523565b825287820152600054881c6000526006875260406000206128b5565b8780612388565b87858886600054841c60005260078252604060002060009160005b846006821061249b5750505055600254906fffffffffffffffffffffffffffffffff19821660025560ff600354161561242457005b6004906bffffffffffffffffffffffff61245d612457600054881c95866000528585526040600020549060801c9061296c565b94612979565b166000525260406000205573ffffffffffffffffffffffffffffffffffffffff196000549261248d84821c612979565b901b16911617600055600080f35b6124c4839562ffffff600194955116908560030260031b9162ffffff809116831b921b19161790565b940191016123ef565b60019185916124db85612865565b815201920192019190879061233d565b823562ffffff811681036103eb578152602092830192016122c5565b346103eb5760006003193601126103eb57602060405160018152f35b6040810190811067ffffffffffffffff8211176116d857604052565b6060810190811067ffffffffffffffff8211176116d857604052565b60a0810190811067ffffffffffffffff8211176116d857604052565b60c0810190811067ffffffffffffffff8211176116d857604052565b90601f601f19910116810190811067ffffffffffffffff8211176116d857604052565b6000915b600683106125c757505050565b60019062ffffff835116815260208091019201920191906125ba565b60031960409101126103eb576004359060243590565b67ffffffffffffffff81116116d857601f01601f191660200190565b90815180825260208080930193019160005b828110612635575050505090565b83516001600160a01b031685529381019392810192600101612627565b906040602061266f93805184520151918160208201520190612615565b90565b805482101561268e5760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b919082519283825260005b8481106126d0575050601f19601f8460006020809697860101520116010190565b6020818301810151848301820152016126af565b61266f9160c061273d6101808451845260208501516020850152604085015115156040850152606085015115156060850152612728608086015160808601906125b6565b60a08501519080610140860152840190612615565b92015190610160818403910152612615565b805482101561268e5760005260206000200190600090565b1561276e57565b606460405162461bcd60e51b815260206004820152601360248201527f6d73672e73656e646572203d3d206f776e6572000000000000000000000000006044820152fd5b156127b957565b606460405162461bcd60e51b815260206004820152600f60248201527f626c6f636b4e756d626572203e203000000000000000000000000000000000006044820152fd5b67ffffffffffffffff81116116d85760051b60200190565b90604051915462ffffff908181168452818160181c166020850152818160301c166040850152818160481c166060850152818160601c16608085015260781c1660a083015261286382612577565b565b906040516128728161253f565b604061289c6001839560ff81546001600160a01b038116875260a01c161515602086015201612815565b910152565b805182101561268e5760209160051b010190565b8054680100000000000000008110156116d8576128d79160018201815561274f565b9190916129435768ffffffffffffffffff8151167fffffffffffffffffffffffffffff00000000000000000000000000000000000071ffffffffffffffffff00000000000000000060208554948468ffffffffffffffffff198716178755015160481b16921617179055565b634e487b7160e01b600052600060045260246000fd5b8181029291811591840414171561072f57565b9190820180921161072f57565b9060016bffffffffffffffffffffffff8093160191821161072f57565b1561299d57565b606460405162461bcd60e51b815260206004820152601a60248201527f4c6f747465727920697320616c726561647920737461727465640000000000006044820152fd5b604051906129ee82612523565b6060602083600081520152565b600019811461072f5760010190565b90612a14826127fd565b612a216040519182612593565b828152601f19612a3182946127fd565b0190602036910137565b90604051612a4881612523565b602081935468ffffffffffffffffff90818116845260481c16910152565b60005460a01c6000526004602052604060002054804210612abe57612a8a90613606565b612863576001430180431161072f576001600160801b03166fffffffffffffffffffffffffffffffff196002541617600255565b606460405162461bcd60e51b815260206004820152600f60248201527f4672616d65206e6f7420656e64656400000000000000000000000000000000006044820152fd5b6001600160801b0360025416612b1757600090565b600190565b612b5c604051612b2b81612523565b600f81527f626c6f636b2e74696d657374616d7000000000000000000000000000000000006020820152429061362c565b6000805460a01c8082526004602052612bae6040832054604051612b7f81612523565b601981527f656e6454696d65735b63757272656e744672616d654964785d00000000000000602082015261362c565b815260046020526040812054421015612bc45790565b50600190565b9190820391821161072f57565b6040519060e0820182811067ffffffffffffffff8211176116d857604052606060c083600081526000602082015260006040820152600083820152604051612c1e81612577565b8236823760808201528260a08201520152565b60405190612c3e82612523565b606082526020808301600090818152846001855110612e2957825460a01c918215612e1e57505083519060001994858301928311612dbe5784612c85910192835190612959565b825192612c9183612979565b9051908115612e0a576bffffffffffffffffffffffff160460018101809111612df65785880152808210612ded57612cc891612bca565b90848201918211612d945780821015612dd2575081925b612ce98483612bca565b9060018201809211612dbe57601f19612d1a612d04846127fd565b93612d126040519586612593565b8085526127fd565b01845b818110612da857505050855281905b83811215612d3c57505050505090565b612d65612d488261369d565b928751612d54826129fb565b94612d5f83836128a1565b526128a1565b507f80000000000000000000000000000000000000000000000000000000000000008114612d94578401612d2c565b602483634e487b7160e01b81526011600452fd5b8290612db2612bd7565b82828701015201612d1d565b602484634e487b7160e01b81526011600452fd5b612ddc9082612bca565b60018101809111612d945792612cdf565b50505050505090565b602485634e487b7160e01b81526011600452fd5b602486634e487b7160e01b81526012600452fd5b935094505091505290565b6064846040519062461bcd60e51b82526004820152601c60248201527f50616765206d7573742067726561746572206f7220657175616c2031000000006044820152fd5b600090815460a01c808352600492602091848352604092612e9084842054613606565b613270576002936001600160801b036002541694612eaf8615156127b2565b815195612ebb87612577565b60c0368837610100810180821161325d5743116131f5574093855b600580821015612f6c57828852855283872054845186810191888352868201526060838183015281526080810181811067ffffffffffffffff821117612f5957906044929187525190200660018101809111612f46579062ffffff60019216612f3f828b61329a565b5201612ed6565b60248860118d634e487b7160e01b835252fd5b60248a60418f634e487b7160e01b835252fd5b50509295919496979383885260058752858820548651908882019283528782015260056060820152606081526080810181811067ffffffffffffffff8211176131e2579060199291885251902006926001918285018095116131cf5762ffffff94851660a08501528189526005885286892080548492612feb826127fd565b92612ff88b519485612593565b8284528c528a8c208c908c8086015b8584106131a957505050505050805190828b905b61311c575b5050505087526007865284872091908793885b88600682106130e957505050505055600254926fffffffffffffffffffffffffffffffff19841660025560ff6003541615613070575b5050505050565b6bffffffffffffffffffffffff6130a361309d875460a01c96878952858552868920549060801c9061296c565b95612979565b1685525282205580546001600160a01b0373ffffffffffffffffffffffffffffffffffffffff196130d68360a01c612979565b60a01b1691161790553880808080613069565b6131118597848697969495965116908560030260031b9162ffffff809116831b921b19161790565b960193929101613033565b8a8c8b68ffffffffffffffffff91828516928784101561319f5761314d83613144868a6128a1565b5101518d6132ab565b1692888403613172575b50505050508368ffffffffffffffffff80921601168361301b565b6131959460069184519561318587612523565b8652818601528a835252206128b5565b8a388b8e82613157565b5050505050613020565b9084959697929394916131bb85612865565b8152019201920190918c8896959493613007565b602489601188634e487b7160e01b835252fd5b60248a604189634e487b7160e01b835252fd5b6084898585519162461bcd60e51b8352820152602760248201527f43616e206e6f74206765742068617368206f66206d6f7265207468616e20323560448201527f3620626c6f636b000000000000000000000000000000000000000000000000006064820152fd5b60248760118c634e487b7160e01b835252fd5b505050509050565b6040519061328582612523565b8161328e612bd7565b8152602061289c612bd7565b90600681101561268e5760051b0190565b604051909260006132bb83612577565b60059081845260a0366020860137805b84518110156132f8578062ffffff6132e56001938a61329a565b51166132f182886128a1565b52016132cb565b50929490939194835b85811061340e57505060a09081015191015162ffffff9081169116036133d0576002811015613331575050600290565b60028103613340575050600390565b6003810361334c575090565b6004810361335b575050600790565b146133cb57505b608460405162461bcd60e51b8152602060048201526024808201527f43616e206e6f742066696e64207072697a652061742063616c63756c6174655060448201527f72697a65000000000000000000000000000000000000000000000000000000006064820152fd5b600990565b60038110156133e0575050600190565b600381036133ef575050600490565b600481036133fe575050600690565b146134095750613362565b600890565b60005b868110613422575b50600101613301565b62ffffff80613431848861329a565b51169061343e83866128a1565b51161461344d57600101613411565b60019195600061346061346693866128a1565b526129fb565b9490613419565b60021b907003fffffffffffffffffffffffffffffffc6ffffffffffffffffffffffffffffffffc83169216820361072f57565b906001600160801b0380921660070291821691820361072f57565b906001600160801b0380921660640291821691820361072f57565b906001600160801b0380921661c3500291821691820361072f57565b906001600160801b03809216620f42400291821691820361072f57565b6001908181146135c957600281146135b4576003811461359f576004811461359f576005811461358a576006811461358a57600781146135755760081461355d5750670de0b6b3a764000090565b6135716001600160801b03809254166134f2565b1690565b506135716001600160801b03809254166134d6565b506135716001600160801b03809254166134bb565b506135716001600160801b03809254166134a0565b506135716001600160801b038092541661346d565b5050600090565b6001600160a01b039161360091600052600560205268ffffffffffffffffff602060406000209201511690612672565b50541690565b60ff600354169081613616575090565b905061362760025460801c4261296c565b101590565b60009190829161368a604051809261367660208301957fb60e72cc0000000000000000000000000000000000000000000000000000000087526040602485015260648401906126a4565b90604483015203601f198101835282612593565b51906a636f6e736f6c652e6c6f675afa50565b6136a5612bd7565b91600160408181860152600090815460a01c8086101561397b57506020959392949586818601528683526004808252828420548652878452600782526136ec838520612815565b6080870152839784918886905b61387a575b505061371e613711899a99979899612a0a565b9260a08a01938452612a0a565b9360c08901948552858093819b5b61373f575b505050505050505050909150565b8382526006808752838320548d101561387457828a5b613766575b50509a88019a8861372c565b8d8452818852848420805482101561386e57818f6137878e9594869461274f565b5090600968ffffffffffffffffff8093541614613814575b808852848c526008826137b4858c8c2061274f565b505416146137c7575b5050019091613755565b6001600160a01b03916137fa918952858d526137e5848b8b2061274f565b505460481c168a895260058d52898920612672565b50541661380c8c519a611468816129fb565b528f806137bd565b808852848c528d82848b8b209061382a9161274f565b505460481c168d8c8b52600590528a8a209061384591612672565b50546001600160a01b0316908851909f61385e906129fb565b9f613868916128a1565b5261379f565b5061375a565b50613731565b82879b9a98999b52600680865286882054821015613970578892919088845b6138ad575b505082019091999a98976136f9565b90918093945089528187528789208a81548310156139675750816138d09161274f565b50600968ffffffffffffffffff8092541614613939575b9060088b926138fe838c8e888e8b8352522061274f565b50541614613913575b81018194939291613899565b9590810180911161392657948990613907565b602489601186634e487b7160e01b835252fd5b9c9b8a819c9b9a9c01809111613954579b9c999a98996138e7565b60248c601187634e487b7160e01b835252fd5b9493925061389e565b5099979698996136fe565b6139a190610ee3928794899860206139ad98999b01528281526004602052205493612bca565b60025460801c90612959565b8252606082015290565b60005b600581106139f3575060a062ffffff91015116600181109081156139e8575b506139e357600190565b600090565b601a915011386139d9565b62ffffff600181613a04848661329a565b511610908115613a1c575b506135c9576001016139ba565b60459150613a2a838561329a565b51161138613a0f565b60005460a01c806000526004602052604060002054421061266f5760ff60035416613a66576001810180911161072f5790565b606460405162461bcd60e51b815260206004820152601160248201527f4c6f7474657279206973207061757365640000000000000000000000000000006044820152fd5b9160005b836000526006602090808252604090816000208054851015613b0f5784613ad49161274f565b50928668ffffffffffffffffff80955460481c1614613af95750505050600101613aae565b909192955061360094966000525260002061274f565b5050505050915050600190565b90613b5b5750805115613b3157805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580613ba6575b613b6c575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15613b6456fea2646970667358221220000c11c0e42da1e9e34360d88d5b4828f5c1199a0ccfd787f74be4b6632c85d664736f6c63430008180033";

type LotteryTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryTest__factory extends ContractFactory {
  constructor(...args: LotteryTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LotteryTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LotteryTest__factory {
    return super.connect(runner) as LotteryTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryTestInterface {
    return new Interface(_abi) as LotteryTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LotteryTest {
    return new Contract(address, _abi, runner) as unknown as LotteryTest;
  }
}
