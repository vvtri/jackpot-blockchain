/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LotteryTest,
  LotteryTestInterface,
} from "../../../contracts/test/LotteryTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FIVE_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FOUR_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FOUR_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_JACKPOT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_NOT_LUCKY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_THREE_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_THREE_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_TWO_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LUCKY_NUMBER_LAST_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LUCKY_NUMBER_NORMAL_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_TICKET_AMOUNT_EACH_BUY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_LUCKY_NUMBER_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "automationOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "automationOracleDrawing",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPowerPlay",
        type: "bool",
      },
      {
        internalType: "uint24[6]",
        name: "_ticketNumber",
        type: "uint24[6]",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentFrameIdx",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "endTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frameDuration",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getDrawDetail",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "jackpot",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFive",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFourAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchThreeAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchThree",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchTwoAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchLast",
            type: "tuple",
          },
        ],
        internalType: "struct LotteryDeclaration.DrawDetailDto",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "page",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.PaginationRequestDto",
        name: "paginationDto",
        type: "tuple",
      },
    ],
    name: "getDrawList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto[]",
            name: "draws",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "totalPage",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.DrawListDto",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHomeStatistic",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto",
            name: "nextDraw",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto",
            name: "lastDraw",
            type: "tuple",
          },
        ],
        internalType: "struct LotteryDeclaration.HomeStatisticDto",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTicketList",
    outputs: [
      {
        components: [
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
          {
            internalType: "bool",
            name: "isPowerPlay",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "frameIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prize",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.TicketDto[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_frameIdx",
        type: "uint256",
      },
    ],
    name: "getPrizeOfFrame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getTickets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPowerPlay",
            type: "bool",
          },
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
        ],
        internalType: "struct LotteryDeclaration.Ticket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getWinningHistoryByFrame",
    outputs: [
      {
        components: [
          {
            internalType: "uint72",
            name: "prize",
            type: "uint72",
          },
          {
            internalType: "uint72",
            name: "ticketIdx",
            type: "uint72",
          },
        ],
        internalType: "struct LotteryDeclaration.Winning[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endTime",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_frameDuration",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_ticketPrice",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_powerPlayPrice",
        type: "uint128",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "isPaidForWinners",
    outputs: [
      {
        internalType: "bool",
        name: "isPaid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "luckyNumbers",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "payForWinners",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "powerPlayPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prepareDrawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newEndTime",
        type: "uint256",
      },
    ],
    name: "restart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "restart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_automationOracle",
        type: "address",
      },
    ],
    name: "setAutomationOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_automationOracleDrawing",
        type: "address",
      },
    ],
    name: "setAutomationOracleDrawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentEndTime",
        type: "uint256",
      },
    ],
    name: "setCurrentEndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldDrawing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldPreparingDrawing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24[6]",
        name: "_luckyNumber",
        type: "uint24[6]",
      },
    ],
    name: "testDrawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isPowerPlay",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winningHistories",
    outputs: [
      {
        internalType: "uint72",
        name: "prize",
        type: "uint72",
      },
      {
        internalType: "uint72",
        name: "ticketIdx",
        type: "uint72",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523461002a5730608052613d7b90816100308239608051818181611b5f0152611c560152f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60e060003560e01c90816308c7dc7d1461263c5781630a959ce9146123c55781631209b1f61461239e57816314f2979f146122c45781631801f38e1461213e5781631aae4fd8146121225781631aaed259146121015781631ef3755d14612018578163207aaa3214611ffc5781632f2043b814611fdb57816334860a9414611f625781633ccfd60b14611f1b578163488d92c214611ed55781634ee5fc5d14611eb95781634f1ef28614611bd957816352d1902d14611b4457816354f1d42714611b1357816357e871e714611aec578163648867ae14611ad057816364ac9f2e14611ab4578163667c05ff14611a5f5781636f58937614611a3e578163703ff1a614611a22578163742676371461182b5781638456cb59146117a95781638c60212b146110695781638da5cb5b146110425781639065e70f14610ff757816392a9b4a214610fcd578163932b37e014610fa157816399a62b0614610f855781639af622b514610ecb5781639db2415e14610eb05781639f1c9c6114610e895781639f5c3d5914610e6d578163a374e43f14610e1c578163a8109d0414610e17578163ad3cb1cc14610db9578163b0e045ae14610d94578163b187bd2614610d71578163b1f9028a14610d55578163b28da7a314610d14578163b34fda2a14610c4a578163b5a17a8014610c2e578163b77200b114610bdd578163c43c2d3d14610b19578163d5984566146107dd578163d8d1ecf7146107c1578163df4456cc14610771578163ea50fbb0146106b6578163ed21b1de1461041c575063fa868a350361000e5760208060031936011261041757600435906001600160a01b0391610289836000541633146128b2565b806000526008825260ff604060002054166103d3578060005260068252604060002080546102b681612948565b916102c460405193846126c8565b8183526000908152848120858085015b8484106103b557505050505080519360005b8581106103075760008481526008865260409020805460ff19166001179055005b68ffffffffffffffffff8284878760018561032288866129ec565b515116146103a8579361037a6000959461036561035f8897968589989789988952600581526103558d60408b20946129ec565b51015116906127bd565b506129b0565b511691610372888b6129ec565b5151166136a5565b9082821561039f575bf115610393576001905b016102e6565b6040513d6000823e3d90fd5b506108fc610383565b505050505060019061038d565b60019182916103c385612b86565b81520192019201919086906102d4565b6064826040519062461bcd60e51b82526004820152601b60248201527f21697350616964466f7257696e6e6572735b6672616d654964785d00000000006044820152fd5b600080fd5b346104175760006003193601126104175760008060005460a09060a01c925b8381111561064c575061046661045083612948565b9261045e60405194856126c8565b808452612948565b92601f19602094018460005b828110610604575050506000906000915b818311156105035750505050604051918083018184528251809152816040850193019160005b8281106104b65785850386f35b9091929382610140600192608088516104d08382516126eb565b80850151151560c084015260408101518c84015260608101516101008401520151610120820152019501939291016104a9565b6000969395969492945b85600052600590818952604060002080548210156105ea578161052f916127bd565b506001600160a01b0333915416036105e1576105d960019293610552838a613c40565b89600052858c526105678460406000206127bd565b50958a60005260048d52604060002054908d5260ff61058a8660406000206127bd565b50548d1c166105a687604051996105a08b612690565b01612960565b885215158d8801528a6040880152606087015260808601526105c781612b46565b946105d282896129ec565b52866129ec565b505b0161050d565b600191506105db565b5050509091936105fd9096959396612b46565b9190610483565b60405161061081612690565b60405161061c816126ac565b60c03682378152600083820152600060408201526000606082015260006080820152828288010152018590610472565b9360009392935b856000526005602052604060002080548210156106a25781610674916127bd565b50546001600160a01b0316331461068e575b600101610653565b9361069a600191612b46565b949050610686565b5050936106b190939293612b46565b61043b565b34610417576000600319360112610417576106cf61340e565b506106d861340e565b6106e0613bc9565b906001821015610732575b6106f761072e92613833565b815260405191829160208352602061071a8251604083870152606086019061282f565b910151601f1984830301604085015261282f565b0390f35b600019820182811161075b5761072e9261074e6106f792613833565b60208401529250506106eb565b634e487b7160e01b600052601160045260246000fd5b346104175761077f3661272e565b90600052600660205260406000208054821015610417576040916107a29161289a565b505468ffffffffffffffffff825191818116835260481c166020820152f35b3461041757600060031936011261041757602060405160458152f35b610100600319360112610417576004356024908135918215159081840361041757366063121561041757604051610813816126ac565b80610104368111610417576044915b818310610afd57505050333b610ab957600a8411610a4f5761084381613b4d565b15610a0b57610868846001966001546001600160801b038116916109f7575b50612aa4565b34036109b357610876613bc9565b60005b85811061088257005b8160005260206005815260406000206040519061089e82612674565b33825282820188815260408301918783528054906801000000000000000082101561099e57906108d2918d820181556127bd565b9390936109895751835491517fffffffffffffffffffffff000000000000000000000000000000000000000000929092166001600160a01b03919091161790151560a01b74ff000000000000000000000000000000000000000016178255518993926000928592909184905b6006821061095157505050015501610879565b61097c839662ffffff8395979496975116908660030260031b9162ffffff809116831b921b19161790565b950192018693929161093e565b88634e487b7160e01b60005260006004526000fd5b89634e487b7160e01b60005260416004526000fd5b60648260166040519162461bcd60e51b8352602060048401528201527f746f74616c436f7374203d3d206d73672e76616c7565000000000000000000006044820152fd5b90610a059160801c90612ab7565b88610862565b60648260156040519162461bcd60e51b8352602060048401528201527f496e76616c6964207469636b6574206e756d62657200000000000000000000006044820152fd5b60848260216040519162461bcd60e51b8352602060048401528201527f5f616d6f756e74203c3d206d61785469636b6574416d6f756e7445616368427560448201527f79000000000000000000000000000000000000000000000000000000000000006064820152fd5b606482601b6040519162461bcd60e51b8352602060048401528201527f6d73672e73656e6465722e636f64652e6c656e677468203d3d203000000000006044820152fd5b823562ffffff8116810361041757815260209283019201610822565b346104175760208060031936011261041757600435600052600681526040600020908154610b4681612948565b90610b5460405192836126c8565b8082528282018094600052836000206000915b838310610bc15760408051878152865181890181905289928201908960005b828110610b935784840385f35b8551805168ffffffffffffffffff908116865290830151168483015294810194604090930192600101610b86565b6001868192610bcf85612b86565b815201920192019190610b67565b3461041757600060031936011261041757610c1e6001600160a01b038060005416331490610c0a826128b2565b600954163314908115610c26575b50612bb1565b610019613003565b905082610c18565b3461041757600060031936011261041757602060405160058152f35b3461041757604060031936011261041757604051610c6781612658565b6004358152610c7e60209160243583820152612dc7565b906040519181839283526060830191805192604083860152835180915260808501908360808260051b8801019501916000905b828210610cc75750505050015160408301520390f35b91939480610d02887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80600195979b849b030186528a5161282f565b98019201920187969594939192610cb1565b3461041757602060031936011261041757600054610d3c6001600160a01b03821633146128b2565b60a01c6000526004602052600435604060002055600080f35b3461041757600060031936011261041757602060405160098152f35b3461041757600060031936011261041757602060ff600354166040519015158152f35b34610417576000600319360112610417576020610daf612cb2565b6040519015158152f35b346104175760006003193601126104175761072e604051610dd981612658565b600581527f352e302e3000000000000000000000000000000000000000000000000000000060208201526040519182916020835260208301906127ef565b61263c565b3461041757610e2a3661272e565b9060005260056020526040600020805482101561041757604091610e4d916127bd565b505460ff8251916001600160a01b038116835260a01c1615156020820152f35b3461041757600060031936011261041757602060405160078152f35b346104175760006003193601126104175760206001600160a01b0360095416604051908152f35b34610417576000600319360112610417576020610daf612c98565b3461041757602080600319360112610417576004356000526006815260406000208054610ef781612948565b91610f0560405193846126c8565b8183526000908152838120848085015b848410610f67575084516000908190875b818310610f3857505050604051908152f35b909192610f5e600191610f5868ffffffffffffffffff61037288876129ec565b90612ab7565b93019190610f26565b6001918291610f7585612b86565b8152019201920191908590610f15565b34610417576000600319360112610417576020604051601a8152f35b346104175760206003193601126104175760043560005260046020526020604060002054604051908152f35b346104175760006003193601126104175760206001600160a01b0360035460081c16604051908152f35b346104175760006003193601126104175761103a6001600160a01b038060005416331490611024826128b2565b60035460081c163314908115610c265750612bb1565b610019612bfc565b346104175760006003193601126104175760206001600160a01b0360005416604051908152f35b3461041757602060031936011261041757604051610140810181811067ffffffffffffffff82111761179357604052600081526040516110a8816126ac565b60c036823760208201526110ba612b2c565b60408201526110c7612b2c565b60608201526110d4612b2c565b60808201526110e1612b2c565b60a08201526110ee612b2c565b60c08201526110fb612b2c565b60e0820152611108612b2c565b610100820152611116612b2c565b61012082015260005460a01c600435101561174f576004356000526004602052604060002054815260043560005260076020526111566040600020612960565b6020820152670de0b6b3a76400006040820151526001600160801b036111e681600154168261118482613688565b16606085015152826111958261366c565b16608085015152826111a682613651565b1660a085015152826111b782613651565b1660c085015152826111c882613636565b1660e085015152826111d982613636565b1661010085015152613603565b16610120820151526000906000806000806000916000938660009660043560005260066020526040600020549960005b8b811061164a57506112899461125f611297989561127b95602060606112556112a69f9e9c9861124861126d99612b55565b8460408701510152612b55565b9201510152612b55565b602060808d01510152612b55565b602060a08b01510152612b55565b602060c08901510152612b55565b602060e08701510152612b55565b60206101008501510152612b55565b6101208201516020015260009182808080808080805b8881106113b25761072e8a60405191829160208352805160208401526112ea602082015160408501906126eb565b60408101516113086101e0918261010087015261020086019061279d565b906101206113a161138b61137661136161134c61133760608a015198601f19998d898c8285030191015261279d565b60808a01518c82038a016101408e015261279d565b60a0890151888c8303016101608d015261279d565b60c0880151878b8303016101808c015261279d565b60e0870151868a8303016101a08b015261279d565b61010086015185898303016101c08a015261279d565b93015191858403019085015261279d565b60043560005260066020526113d46113ce82604060002061289a565b50612b86565b90600968ffffffffffffffffff83511614611616575b8a600868ffffffffffffffffff845116146115dd575b82600768ffffffffffffffffff6001955116146115a4575b600668ffffffffffffffffff8251161461156b575b600568ffffffffffffffffff82511614611532575b600468ffffffffffffffffff825116146114f9575b600368ffffffffffffffffff825116146114c5575b600268ffffffffffffffffff82511614611489575b5050016112bc565b6114ba60206101206114a56001600160a01b0394600435613766565b94015101519b6114b481612b46565b9c6129ec565b911690528a8d611481565b6114d181600435613766565b6001600160a01b036114f0602061010086015101519b6114b481612b46565b9116905261146c565b61150581600435613766565b6001600160a01b03611529602060e086015101519a61152381612b46565b9b6129ec565b91169052611457565b61153e81600435613766565b6001600160a01b03611562602060c086015101519961155c81612b46565b9a6129ec565b91169052611442565b61157781600435613766565b6001600160a01b0361159b602060a086015101519861159581612b46565b996129ec565b9116905261142d565b6115b081600435613766565b6001600160a01b036115d4602060808601510151976115ce81612b46565b986129ec565b91169052611418565b6115e983600435613766565b6060820151602001516115fb8f612b46565b9e611605916129ec565b906001600160a01b03169052611400565b8a6001600160a01b036116416020604061163287600435613766565b94015101519a61152381612b46565b911690526113ea565b90919250600435600052600660205268ffffffffffffffffff61167182604060002061289a565b5054166009811461173f575b6008811461172f575b6007811461171f575b6006811461170f575b600581146116ff575b600481146116ef575b600381146116db575b6002146116c7575b60010190899291611216565b976116d3600191612b46565b9890506116bb565b976116e7600291612b46565b9890506116b3565b966116f990612b46565b966116aa565b9561170990612b46565b956116a1565b9461171990612b46565b94611698565b9361172990612b46565b9361168f565b9261173990612b46565b92611686565b9161174990612b46565b9161167d565b606460405162461bcd60e51b815260206004820152601460248201527f44726177206973206e6f742068617070656e65640000000000000000000000006044820152fd5b634e487b7160e01b600052604160045260246000fd5b34610417576000600319360112610417576117d06001600160a01b036000541633146128b2565b60035460ff81166117e75760ff1916600117600355005b606460405162461bcd60e51b815260206004820152601960248201527f4c6f747465727920697320616c726561647920706175736564000000000000006044820152fd5b34610417576080600319360112610417576004356001600160801b03908181168091036104175760243582811681036104175760443590838216809203610417576064358481168103610417577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009485549460ff8660401c16159567ffffffffffffffff811680159081611a1a575b6001149081611a10575b159081611a07575b506119dd578660017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000083161789556119be575b503373ffffffffffffffffffffffffffffffffffffffff1960005416178060005560a01c6000526004602052604060002055600254906fffffffffffffffffffffffffffffffff19809460801b1691161760025560801b161760015560ff196003541660035561196b57005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff191668010000000000000001178755876118ff565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b905015896118cc565b303b1591506118c4565b8891506118ba565b3461041757600060031936011261041757602060405160038152f35b3461041757600060031936011261041757602060005460a01c604051908152f35b3461041757602060031936011261041757611a78612718565b6001600160a01b0390611a90826000541633146128b2565b1673ffffffffffffffffffffffffffffffffffffffff196009541617600955600080f35b3461041757600060031936011261041757602060405160048152f35b34610417576000600319360112610417576020604051600a8152f35b346104175760006003193601126104175760206001600160801b0360025416604051908152f35b34610417576020600319360112610417576004356000526008602052602060ff604060002054166040519015158152f35b34610417576000600319360112610417576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611baf5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b604060031936011261041757611bed612718565b602490813567ffffffffffffffff81116104175736602382011215610417578060040135611c1a81612744565b92611c2860405194856126c8565b81845260209182850193368783830101116104175781600092888693018737860101526001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016803014908115611e8b575b50611baf57611c95816000541633146128b2565b8116936040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa60009181611e5c575b50611d04578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103611e2e5750843b15611dff57508173ffffffffffffffffffffffffffffffffffffffff19825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115611dcb575060006100199481925190845af4903d15611dc2573d611da581612744565b90611db360405192836126c8565b8152600081943d92013e613cb2565b60609250613cb2565b935050505034611dd757005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d8311611e84575b611e7481836126c8565b8101031261041757519088611ccf565b503d611e6a565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141587611c81565b3461041757600060031936011261041757602060405160088152f35b3461041757611ee33661272e565b9060005260076020526040600020600682101561041757816003600a62ffffff938160209604015492060260031b1c16604051908152f35b346104175760006003193601126104175760008080806001600160a01b03815416611f478133146128b2565b4790828215611f59575bf11561039357005b506108fc611f51565b3461041757602060031936011261041757611f7b612718565b611f916001600160a01b036000541633146128b2565b7fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff006003549260081b16911617600355600080f35b3461041757600060031936011261041757602060015460801c604051908152f35b3461041757600060031936011261041757602060405160028152f35b34610417576000600319360112610417576000546120406001600160a01b03821633146128b2565b6003549061205060ff8316612ae1565b60a01c60005260046020526040600020544210156120715760ff1916600355005b60a460405162461bcd60e51b815260206004820152604d60248201527f596f752063616e206f6e6c79207265737461727420746f2063757272656e742060448201527f656e642074696d6520696620796f75206861766520706175736564206d6f726560648201527f207468616e2031206672616d65000000000000000000000000000000000000006084820152fd5b3461041757600060031936011261041757602060025460801c604051908152f35b3461041757600060031936011261041757602060405160068152f35b346104175760208060031936011261041757600054600435916001600160a01b0382169161216d3384146128b2565b61217b60ff60035416612ae1565b834210156122815760a01c9182600052600482524260406000205410156121f1576bffffffffffffffffffffffff9081841461075b576001600494019073ffffffffffffffffffffffffffffffffffffffff198260a01b1617600055166000525260406000205560ff1960035416600355600080f35b60a4826040519062461bcd60e51b82526004820152604960248201527f596f752063616e206f6e6c79207265737461727420746f206e657720656e642060448201527f74696d6520696620796f75206861766520706175736564206d6f72652074686160648201527f6e2031206672616d6500000000000000000000000000000000000000000000006084820152fd5b6064826040519062461bcd60e51b825280600483015260248201527f6e6577456e6454696d65206d7573742067726561746572207468616e206e6f776044820152fd5b3461041757602080600319360112610417576004356000526005815260406000209081546122f181612948565b906122ff60405192836126c8565b8082528282018094600052836000206000915b8383106123815760408051878152865181890181905289928201908960005b82811061233e5784840385f35b9091928261010060019261237260408a516001600160a01b03815116845285810151151586850152015160408301906126eb565b01960191019492919094612331565b600286600192612390856129b0565b815201920192019190612312565b346104175760006003193601126104175760206001600160801b0360015416604051908152f35b346104175760c0600319360112610417573660231215610417576040516123eb816126ac565b8060c43660c411610417576004915b81831061262057836000546001600160a01b0361241a81831633146128b2565b6002926124336001600160801b036002541615156128fd565b60a092831c6000526020916005835260406000209485549061245482612948565b9661246260405198896126c8565b828852600090815285812086808a015b8584106126025750505050505084519160005b68ffffffffffffffffff8082169085821015612509576124b360406124aa848c6129ec565b51015185613441565b16600181036124d5575b5050600168ffffffffffffffffff8092160116612485565b61250291604051916124e683612658565b825287820152600054881c600052600687526040600020612a00565b87806124bd565b87858886600054841c60005260078252604060002060009160005b84600682106125d05750505055600254906fffffffffffffffffffffffffffffffff19821660025560ff600354161561255957005b6004906bffffffffffffffffffffffff61259261258c600054881c95866000528585526040600020549060801c90612ab7565b94612ac4565b166000525260406000205573ffffffffffffffffffffffffffffffffffffffff19600054926125c284821c612ac4565b901b16911617600055600080f35b6125f9839562ffffff600194955116908560030260031b9162ffffff809116831b921b19161790565b94019101612524565b6001918591612610856129b0565b8152019201920191908790612472565b823562ffffff81168103610417578152602092830192016123fa565b3461041757600060031936011261041757602060405160018152f35b6040810190811067ffffffffffffffff82111761179357604052565b6060810190811067ffffffffffffffff82111761179357604052565b60a0810190811067ffffffffffffffff82111761179357604052565b60c0810190811067ffffffffffffffff82111761179357604052565b90601f601f19910116810190811067ffffffffffffffff82111761179357604052565b6000915b600683106126fc57505050565b60019062ffffff835116815260208091019201920191906126ef565b600435906001600160a01b038216820361041757565b6003196040910112610417576004359060243590565b67ffffffffffffffff811161179357601f01601f191660200190565b90815180825260208080930193019160005b828110612780575050505090565b83516001600160a01b031685529381019392810192600101612772565b90604060206127ba93805184520151918160208201520190612760565b90565b80548210156127d95760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b919082519283825260005b84811061281b575050601f19601f8460006020809697860101520116010190565b6020818301810151848301820152016127fa565b6127ba9160c06128886101808451845260208501516020850152604085015115156040850152606085015115156060850152612873608086015160808601906126eb565b60a08501519080610140860152840190612760565b92015190610160818403910152612760565b80548210156127d95760005260206000200190600090565b156128b957565b606460405162461bcd60e51b815260206004820152601360248201527f6d73672e73656e646572203d3d206f776e6572000000000000000000000000006044820152fd5b1561290457565b606460405162461bcd60e51b815260206004820152600f60248201527f626c6f636b4e756d626572203e203000000000000000000000000000000000006044820152fd5b67ffffffffffffffff81116117935760051b60200190565b90604051915462ffffff908181168452818160181c166020850152818160301c166040850152818160481c166060850152818160601c16608085015260781c1660a08301526129ae826126ac565b565b906040516129bd81612674565b60406129e76001839560ff81546001600160a01b038116875260a01c161515602086015201612960565b910152565b80518210156127d95760209160051b010190565b80546801000000000000000081101561179357612a229160018201815561289a565b919091612a8e5768ffffffffffffffffff8151167fffffffffffffffffffffffffffff00000000000000000000000000000000000071ffffffffffffffffff00000000000000000060208554948468ffffffffffffffffff198716178755015160481b16921617179055565b634e487b7160e01b600052600060045260246000fd5b8181029291811591840414171561075b57565b9190820180921161075b57565b9060016bffffffffffffffffffffffff8093160191821161075b57565b15612ae857565b606460405162461bcd60e51b815260206004820152601a60248201527f4c6f747465727920697320616c726561647920737461727465640000000000006044820152fd5b60405190612b3982612658565b6060602083600081520152565b600019811461075b5760010190565b90612b5f82612948565b612b6c60405191826126c8565b828152601f19612b7c8294612948565b0190602036910137565b90604051612b9381612658565b602081935468ffffffffffffffffff90818116845260481c16910152565b15612bb857565b606460405162461bcd60e51b815260206004820152601e60248201527f6d73672e73656e646572203d3d206175746f6d6174696f6e4f7261636c6500006044820152fd5b60005460a01c6000526004602052604060002054804210612c5457612c209061379c565b6129ae576001430180431161075b576001600160801b03166fffffffffffffffffffffffffffffffff196002541617600255565b606460405162461bcd60e51b815260206004820152600f60248201527f4672616d65206e6f7420656e64656400000000000000000000000000000000006044820152fd5b6001600160801b0360025416612cad57600090565b600190565b612cf2604051612cc181612658565b600f81527f626c6f636b2e74696d657374616d700000000000000000000000000000000000602082015242906137c2565b6000805460a01c8082526004602052612d446040832054604051612d1581612658565b601981527f656e6454696d65735b63757272656e744672616d654964785d0000000000000060208201526137c2565b815260046020526040812054421015612d5a5790565b50600190565b9190820391821161075b57565b6040519060e0820182811067ffffffffffffffff82111761179357604052606060c083600081526000602082015260006040820152600083820152604051612db4816126ac565b8236823760808201528260a08201520152565b60405190612dd482612658565b606082526020808301600090818152846001855110612fbf57825460a01c918215612fb457505083519060001994858301928311612f545784612e1b910192835190612aa4565b825192612e2783612ac4565b9051908115612fa0576bffffffffffffffffffffffff160460018101809111612f8c5785880152808210612f8357612e5e91612d60565b90848201918211612f2a5780821015612f68575081925b612e7f8483612d60565b9060018201809211612f5457601f19612eb0612e9a84612948565b93612ea860405195866126c8565b808552612948565b01845b818110612f3e57505050855281905b83811215612ed257505050505090565b612efb612ede82613833565b928751612eea82612b46565b94612ef583836129ec565b526129ec565b507f80000000000000000000000000000000000000000000000000000000000000008114612f2a578401612ec2565b602483634e487b7160e01b81526011600452fd5b8290612f48612d6d565b82828701015201612eb3565b602484634e487b7160e01b81526011600452fd5b612f729082612d60565b60018101809111612f2a5792612e75565b50505050505090565b602485634e487b7160e01b81526011600452fd5b602486634e487b7160e01b81526012600452fd5b935094505091505290565b6064846040519062461bcd60e51b82526004820152601c60248201527f50616765206d7573742067726561746572206f7220657175616c2031000000006044820152fd5b600090815460a01c8083526004926020918483526040926130268484205461379c565b613406576002936001600160801b0360025416946130458615156128fd565b815195613051876126ac565b60c036883761010081018082116133f357431161338b574093855b60058082101561310257828852855283872054845186810191888352868201526060838183015281526080810181811067ffffffffffffffff8211176130ef579060449291875251902006600181018091116130dc579062ffffff600192166130d5828b613430565b520161306c565b60248860118d634e487b7160e01b835252fd5b60248a60418f634e487b7160e01b835252fd5b50509295919496979383885260058752858820548651908882019283528782015260056060820152606081526080810181811067ffffffffffffffff821117613378579060199291885251902006926001918285018095116133655762ffffff94851660a0850152818952600588528689208054849261318182612948565b9261318e8b5194856126c8565b8284528c528a8c208c908c8086015b85841061333f57505050505050805190828b905b6132b2575b5050505087526007865284872091908793885b886006821061327f57505050505055600254926fffffffffffffffffffffffffffffffff19841660025560ff6003541615613206575b5050505050565b6bffffffffffffffffffffffff613239613233875460a01c96878952858552868920549060801c90612ab7565b95612ac4565b1685525282205580546001600160a01b0373ffffffffffffffffffffffffffffffffffffffff1961326c8360a01c612ac4565b60a01b16911617905538808080806131ff565b6132a78597848697969495965116908560030260031b9162ffffff809116831b921b19161790565b9601939291016131c9565b8a8c8b68ffffffffffffffffff918285169287841015613335576132e3836132da868a6129ec565b5101518d613441565b1692888403613308575b50505050508368ffffffffffffffffff8092160116836131b1565b61332b9460069184519561331b87612658565b8652818601528a83525220612a00565b8a388b8e826132ed565b50505050506131b6565b908495969792939491613351856129b0565b8152019201920190918c889695949361319d565b602489601188634e487b7160e01b835252fd5b60248a604189634e487b7160e01b835252fd5b6084898585519162461bcd60e51b8352820152602760248201527f43616e206e6f74206765742068617368206f66206d6f7265207468616e20323560448201527f3620626c6f636b000000000000000000000000000000000000000000000000006064820152fd5b60248760118c634e487b7160e01b835252fd5b505050509050565b6040519061341b82612658565b81613424612d6d565b815260206129e7612d6d565b9060068110156127d95760051b0190565b60405190926000613451836126ac565b60059081845260a0366020860137805b845181101561348e578062ffffff61347b6001938a613430565b511661348782886129ec565b5201613461565b50929490939194835b8581106135a457505060a09081015191015162ffffff9081169116036135665760028110156134c7575050600290565b600281036134d6575050600390565b600381036134e2575090565b600481036134f1575050600790565b1461356157505b608460405162461bcd60e51b8152602060048201526024808201527f43616e206e6f742066696e64207072697a652061742063616c63756c6174655060448201527f72697a65000000000000000000000000000000000000000000000000000000006064820152fd5b600990565b6003811015613576575050600190565b60038103613585575050600490565b60048103613594575050600690565b1461359f57506134f8565b600890565b60005b8681106135b8575b50600101613497565b62ffffff806135c78488613430565b5116906135d483866129ec565b5116146135e3576001016135a7565b6001919560006135f66135fc93866129ec565b52612b46565b94906135af565b60021b907003fffffffffffffffffffffffffffffffc6ffffffffffffffffffffffffffffffffc83169216820361075b57565b906001600160801b0380921660070291821691820361075b57565b906001600160801b0380921660640291821691820361075b57565b906001600160801b0380921661c3500291821691820361075b57565b906001600160801b03809216620f42400291821691820361075b57565b60019081811461375f576002811461374a5760038114613735576004811461373557600581146137205760068114613720576007811461370b576008146136f35750670de0b6b3a764000090565b6137076001600160801b0380925416613688565b1690565b506137076001600160801b038092541661366c565b506137076001600160801b0380925416613651565b506137076001600160801b0380925416613636565b506137076001600160801b0380925416613603565b5050600090565b6001600160a01b039161379691600052600560205268ffffffffffffffffff6020604060002092015116906127bd565b50541690565b60ff6003541690816137ac575090565b90506137bd60025460801c42612ab7565b101590565b600091908291613820604051809261380c60208301957fb60e72cc0000000000000000000000000000000000000000000000000000000087526040602485015260648401906127ef565b90604483015203601f1981018352826126c8565b51906a636f6e736f6c652e6c6f675afa50565b61383b612d6d565b91600160408181860152600090815460a01c80861015613b115750602095939294958681860152868352600480825282842054865287845260078252613882838520612960565b6080870152839784918886905b613a10575b50506138b46138a7899a99979899612b55565b9260a08a01938452612b55565b9360c08901948552858093819b5b6138d5575b505050505050505050909150565b8382526006808752838320548d1015613a0a57828a5b6138fc575b50509a88019a886138c2565b8d84528188528484208054821015613a0457818f61391d8e9594869461289a565b5090600968ffffffffffffffffff80935416146139aa575b808852848c5260088261394a858c8c2061289a565b5054161461395d575b50500190916138eb565b6001600160a01b0391613990918952858d5261397b848b8b2061289a565b505460481c168a895260058d528989206127bd565b5054166139a28c519a61152381612b46565b528f80613953565b808852848c528d82848b8b20906139c09161289a565b505460481c168d8c8b52600590528a8a20906139db916127bd565b50546001600160a01b0316908851909f6139f490612b46565b9f6139fe916129ec565b52613935565b506138f0565b506138c7565b82879b9a98999b52600680865286882054821015613b06578892919088845b613a43575b505082019091999a989761388f565b90918093945089528187528789208a8154831015613afd575081613a669161289a565b50600968ffffffffffffffffff8092541614613acf575b9060088b92613a94838c8e888e8b8352522061289a565b50541614613aa9575b81018194939291613a2f565b95908101809111613abc57948990613a9d565b602489601186634e487b7160e01b835252fd5b9c9b8a819c9b9a9c01809111613aea579b9c999a9899613a7d565b60248c601187634e487b7160e01b835252fd5b94939250613a34565b509997969899613894565b613b3790610f5892879489986020613b4398999b01528281526004602052205493612d60565b60025460801c90612aa4565b8252606082015290565b60005b60058110613b89575060a062ffffff9101511660018110908115613b7e575b50613b7957600190565b600090565b601a91501138613b6f565b62ffffff600181613b9a8486613430565b511610908115613bb2575b5061375f57600101613b50565b60459150613bc08385613430565b51161138613ba5565b60005460a01c80600052600460205260406000205442106127ba5760ff60035416613bfc576001810180911161075b5790565b606460405162461bcd60e51b815260206004820152601160248201527f4c6f7474657279206973207061757365640000000000000000000000000000006044820152fd5b9160005b836000526006602090808252604090816000208054851015613ca55784613c6a9161289a565b50928668ffffffffffffffffff80955460481c1614613c8f5750505050600101613c44565b909192955061379694966000525260002061289a565b5050505050915050600190565b90613cf15750805115613cc757805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580613d3c575b613d02575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15613cfa56fea2646970667358221220dc4678127a63030e1348f07d8e1dc7b31c03ad187a7fb220ac64666e73a185b164736f6c63430008180033";

type LotteryTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryTest__factory extends ContractFactory {
  constructor(...args: LotteryTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LotteryTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LotteryTest__factory {
    return super.connect(runner) as LotteryTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryTestInterface {
    return new Interface(_abi) as LotteryTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LotteryTest {
    return new Contract(address, _abi, runner) as unknown as LotteryTest;
  }
}
