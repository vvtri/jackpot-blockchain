/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Lottery, LotteryInterface } from "../../contracts/Lottery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FIVE_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FOUR_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FOUR_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_JACKPOT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_NOT_LUCKY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_THREE_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_THREE_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_TWO_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LUCKY_NUMBER_LAST_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LUCKY_NUMBER_NORMAL_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_TICKET_AMOUNT_EACH_BUY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_LUCKY_NUMBER_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "automationOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "automationOracleDrawing",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPowerPlay",
        type: "bool",
      },
      {
        internalType: "uint24[6]",
        name: "_ticketNumber",
        type: "uint24[6]",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentFrameIdx",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "endTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frameDuration",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getDrawDetail",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "jackpot",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFive",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFourAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchThreeAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchThree",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchTwoAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchLast",
            type: "tuple",
          },
        ],
        internalType: "struct LotteryDeclaration.DrawDetailDto",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "page",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.PaginationRequestDto",
        name: "paginationDto",
        type: "tuple",
      },
    ],
    name: "getDrawList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto[]",
            name: "draws",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "totalPage",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.DrawListDto",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHomeStatistic",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto",
            name: "nextDraw",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto",
            name: "lastDraw",
            type: "tuple",
          },
        ],
        internalType: "struct LotteryDeclaration.HomeStatisticDto",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTicketList",
    outputs: [
      {
        components: [
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
          {
            internalType: "bool",
            name: "isPowerPlay",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "frameIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prize",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.TicketDto[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_frameIdx",
        type: "uint256",
      },
    ],
    name: "getPrizeOfFrame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getTickets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPowerPlay",
            type: "bool",
          },
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
        ],
        internalType: "struct LotteryDeclaration.Ticket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getWinningHistoryByFrame",
    outputs: [
      {
        components: [
          {
            internalType: "uint72",
            name: "prize",
            type: "uint72",
          },
          {
            internalType: "uint72",
            name: "ticketIdx",
            type: "uint72",
          },
        ],
        internalType: "struct LotteryDeclaration.Winning[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endTime",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_frameDuration",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_ticketPrice",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_powerPlayPrice",
        type: "uint128",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "isPaidForWinners",
    outputs: [
      {
        internalType: "bool",
        name: "isPaid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "luckyNumbers",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "payForWinners",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "powerPlayPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prepareDrawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newEndTime",
        type: "uint256",
      },
    ],
    name: "restart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "restart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_automationOracle",
        type: "address",
      },
    ],
    name: "setAutomationOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_automationOracleDrawing",
        type: "address",
      },
    ],
    name: "setAutomationOracleDrawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentEndTime",
        type: "uint256",
      },
    ],
    name: "setCurrentEndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldDrawing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldPreparingDrawing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isPowerPlay",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winningHistories",
    outputs: [
      {
        internalType: "uint72",
        name: "prize",
        type: "uint72",
      },
      {
        internalType: "uint72",
        name: "ticketIdx",
        type: "uint72",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523461002a5730608052613b0090816100308239608051818181611b6a0152611c610152f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60e060003560e01c90816308c7dc7d146123d05781631209b1f6146123a957816314f2979f146122cf5781631801f38e146121495781631aae4fd81461212d5781631aaed2591461210c5781631ef3755d14612023578163207aaa32146120075781632f2043b814611fe657816334860a9414611f6d5781633ccfd60b14611f26578163488d92c214611ee05781634ee5fc5d14611ec45781634f1ef28614611be457816352d1902d14611b4f57816354f1d42714611b1e57816357e871e714611af7578163648867ae14611adb57816364ac9f2e14611abf578163667c05ff14611a6a5781636f58937614611a49578163703ff1a614611a2d57816374267637146118205781638456cb591461179e5781638c60212b1461105e5781638da5cb5b146110375781639065e70f14610fec57816392a9b4a214610fc2578163932b37e014610f9657816399a62b0614610f7a5781639af622b514610ec05781639db2415e14610ea55781639f1c9c6114610e7e5781639f5c3d5914610e62578163a374e43f14610e11578163a8109d0414610e0c578163ad3cb1cc14610dae578163b0e045ae14610d89578163b187bd2614610d66578163b1f9028a14610d4a578163b28da7a314610d09578163b34fda2a14610c3f578163b5a17a8014610c23578163b77200b114610bd2578163c43c2d3d14610b0e578163d5984566146107d2578163d8d1ecf7146107b6578163df4456cc14610766578163ea50fbb0146106ab578163ed21b1de14610411575063fa868a350361000e5760208060031936011261040c57600435906001600160a01b039161027e836000541633146126ea565b806000526008825260ff604060002054166103c8578060005260068252604060002080546102ab81612646565b916102b960405193846124b5565b8183526000908152848120858085015b8484106103aa57505050505080519360005b8581106102fc5760008481526008865260409020805460ff19166001179055005b68ffffffffffffffffff828487876001856103178886612805565b5151161461039d579361036f6000959461035a61035488979685899897899889526005815261034a8d60408b2094612805565b5101511690612551565b506126ae565b511691610367888b612805565b515116613257565b90828215610394575bf115610388576001905b016102db565b6040513d6000823e3d90fd5b506108fc610378565b5050505050600190610382565b60019182916103b8856127da565b81520192019201919086906102c9565b6064826040519062461bcd60e51b82526004820152601b60248201527f21697350616964466f7257696e6e6572735b6672616d654964785d00000000006044820152fd5b600080fd5b3461040c57600060031936011261040c5760008060005460a09060a01c925b83811115610641575061045b61044583612646565b9261045360405194856124b5565b808452612646565b92601f19602094018460005b8281106105f9575050506000906000915b818311156104f85750505050604051918083018184528251809152816040850193019160005b8281106104ab5785850386f35b9091929382610140600192608088516104c58382516123ec565b80850151151560c084015260408101518c840152606081015161010084015201516101208201520195019392910161049e565b6000969395969492945b85600052600590818952604060002080548210156105df578161052491612551565b506001600160a01b0333915416036105d6576105ce60019293610547838a6139c5565b89600052858c5261055c846040600020612551565b50958a60005260048d52604060002054908d5260ff61057f866040600020612551565b50548d1c1661059b87604051996105958b61247d565b0161265e565b885215158d8801528a6040880152606087015260808601526105bc8161279a565b946105c78289612805565b5286612805565b505b01610502565b600191506105d0565b5050509091936105f2909695939661279a565b9190610478565b6040516106058161247d565b60405161061181612499565b60c03682378152600083820152600060408201526000606082015260006080820152828288010152018590610467565b9360009392935b85600052600560205260406000208054821015610697578161066991612551565b50546001600160a01b03163314610683575b600101610648565b9361068f60019161279a565b94905061067b565b5050936106a69093929361279a565b610430565b3461040c57600060031936011261040c576106c4613193565b506106cd613193565b6106d561394e565b906001821015610727575b6106ec610723926133e5565b815260405191829160208352602061070f825160408387015260608601906125c3565b910151601f198483030160408501526125c3565b0390f35b600019820182811161075057610723926107436106ec926133e5565b60208401529250506106e0565b634e487b7160e01b600052601160045260246000fd5b3461040c576107743661242f565b9060005260066020526040600020805482101561040c576040916107979161262e565b505468ffffffffffffffffff825191818116835260481c166020820152f35b3461040c57600060031936011261040c57602060405160458152f35b61010060031936011261040c576004356024908135918215159081840361040c57366063121561040c5760405161080881612499565b8061010436811161040c576044915b818310610af257505050333b610aae57600a8411610a4457610838816138d2565b15610a005761085d846001966001546001600160801b038116916109ec575b506129e2565b34036109a85761086b61394e565b60005b85811061087757005b8160005260206005815260406000206040519061089382612461565b33825282820188815260408301918783528054906801000000000000000082101561099357906108c7918d82018155612551565b93909361097e5751835491517fffffffffffffffffffffff000000000000000000000000000000000000000000929092166001600160a01b03919091161790151560a01b74ff000000000000000000000000000000000000000016178255518993926000928592909184905b600682106109465750505001550161086e565b610971839662ffffff8395979496975116908660030260031b9162ffffff809116831b921b19161790565b9501920186939291610933565b88634e487b7160e01b60005260006004526000fd5b89634e487b7160e01b60005260416004526000fd5b60648260166040519162461bcd60e51b8352602060048401528201527f746f74616c436f7374203d3d206d73672e76616c7565000000000000000000006044820152fd5b906109fa9160801c90612864565b88610857565b60648260156040519162461bcd60e51b8352602060048401528201527f496e76616c6964207469636b6574206e756d62657200000000000000000000006044820152fd5b60848260216040519162461bcd60e51b8352602060048401528201527f5f616d6f756e74203c3d206d61785469636b6574416d6f756e7445616368427560448201527f79000000000000000000000000000000000000000000000000000000000000006064820152fd5b606482601b6040519162461bcd60e51b8352602060048401528201527f6d73672e73656e6465722e636f64652e6c656e677468203d3d203000000000006044820152fd5b823562ffffff8116810361040c57815260209283019201610817565b3461040c5760208060031936011261040c57600435600052600681526040600020908154610b3b81612646565b90610b4960405192836124b5565b8082528282018094600052836000206000915b838310610bb65760408051878152865181890181905289928201908960005b828110610b885784840385f35b8551805168ffffffffffffffffff908116865290830151168483015294810194604090930192600101610b7b565b6001868192610bc4856127da565b815201920192019190610b5c565b3461040c57600060031936011261040c57610c136001600160a01b038060005416331490610bff826126ea565b600954163314908115610c1b575b50612819565b610019612ca8565b905082610c0d565b3461040c57600060031936011261040c57602060405160058152f35b3461040c57604060031936011261040c57604051610c5c81612445565b6004358152610c7360209160243583820152612a6c565b906040519181839283526060830191805192604083860152835180915260808501908360808260051b8801019501916000905b828210610cbc5750505050015160408301520390f35b91939480610cf7887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80600195979b849b030186528a516125c3565b98019201920187969594939192610ca6565b3461040c57602060031936011261040c57600054610d316001600160a01b03821633146126ea565b60a01c6000526004602052600435604060002055600080f35b3461040c57600060031936011261040c57602060405160098152f35b3461040c57600060031936011261040c57602060ff600354166040519015158152f35b3461040c57600060031936011261040c576020610da4612927565b6040519015158152f35b3461040c57600060031936011261040c57610723604051610dce81612445565b600581527f352e302e300000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190612583565b6123d0565b3461040c57610e1f3661242f565b9060005260056020526040600020805482101561040c57604091610e4291612551565b505460ff8251916001600160a01b038116835260a01c1615156020820152f35b3461040c57600060031936011261040c57602060405160078152f35b3461040c57600060031936011261040c5760206001600160a01b0360095416604051908152f35b3461040c57600060031936011261040c576020610da461290d565b3461040c5760208060031936011261040c576004356000526006815260406000208054610eec81612646565b91610efa60405193846124b5565b8183526000908152838120848085015b848410610f5c575084516000908190875b818310610f2d57505050604051908152f35b909192610f53600191610f4d68ffffffffffffffffff6103678887612805565b90612864565b93019190610f1b565b6001918291610f6a856127da565b8152019201920191908590610f0a565b3461040c57600060031936011261040c576020604051601a8152f35b3461040c57602060031936011261040c5760043560005260046020526020604060002054604051908152f35b3461040c57600060031936011261040c5760206001600160a01b0360035460081c16604051908152f35b3461040c57600060031936011261040c5761102f6001600160a01b038060005416331490611019826126ea565b60035460081c163314908115610c1b5750612819565b610019612871565b3461040c57600060031936011261040c5760206001600160a01b0360005416604051908152f35b3461040c57602060031936011261040c57604051610140810181811067ffffffffffffffff821117611788576040526000815260405161109d81612499565b60c036823760208201526110af612780565b60408201526110bc612780565b60608201526110c9612780565b60808201526110d6612780565b60a08201526110e3612780565b60c08201526110f0612780565b60e08201526110fd612780565b61010082015261110b612780565b61012082015260005460a01c60043510156117445760043560005260046020526040600020548152600435600052600760205261114b604060002061265e565b6020820152670de0b6b3a76400006040820151526001600160801b036111db8160015416826111798261323a565b166060850151528261118a8261321e565b166080850151528261119b82613203565b1660a085015152826111ac82613203565b1660c085015152826111bd826131e8565b1660e085015152826111ce826131e8565b16610100850151526131b5565b16610120820151526000906000806000806000916000938660009660043560005260066020526040600020549960005b8b811061163f575061127e9461125461128c9895611270956020606061124a61129b9f9e9c9861123d611262996127a9565b84604087015101526127a9565b92015101526127a9565b602060808d015101526127a9565b602060a08b015101526127a9565b602060c089015101526127a9565b602060e087015101526127a9565b602061010085015101526127a9565b6101208201516020015260009182808080808080805b8881106113a7576107238a60405191829160208352805160208401526112df602082015160408501906123ec565b60408101516112fd6101e09182610100870152610200860190612531565b9061012061139661138061136b61135661134161132c60608a015198601f19998d898c82850301910152612531565b60808a01518c82038a016101408e0152612531565b60a0890151888c8303016101608d0152612531565b60c0880151878b8303016101808c0152612531565b60e0870151868a8303016101a08b0152612531565b61010086015185898303016101c08a0152612531565b930151918584030190850152612531565b60043560005260066020526113c96113c382604060002061262e565b506127da565b90600968ffffffffffffffffff8351161461160b575b8a600868ffffffffffffffffff845116146115d2575b82600768ffffffffffffffffff600195511614611599575b600668ffffffffffffffffff82511614611560575b600568ffffffffffffffffff82511614611527575b600468ffffffffffffffffff825116146114ee575b600368ffffffffffffffffff825116146114ba575b600268ffffffffffffffffff8251161461147e575b5050016112b1565b6114af602061012061149a6001600160a01b0394600435613318565b94015101519b6114a98161279a565b9c612805565b911690528a8d611476565b6114c681600435613318565b6001600160a01b036114e5602061010086015101519b6114a98161279a565b91169052611461565b6114fa81600435613318565b6001600160a01b0361151e602060e086015101519a6115188161279a565b9b612805565b9116905261144c565b61153381600435613318565b6001600160a01b03611557602060c08601510151996115518161279a565b9a612805565b91169052611437565b61156c81600435613318565b6001600160a01b03611590602060a086015101519861158a8161279a565b99612805565b91169052611422565b6115a581600435613318565b6001600160a01b036115c9602060808601510151976115c38161279a565b98612805565b9116905261140d565b6115de83600435613318565b6060820151602001516115f08f61279a565b9e6115fa91612805565b906001600160a01b031690526113f5565b8a6001600160a01b036116366020604061162787600435613318565b94015101519a6115188161279a565b911690526113df565b90919250600435600052600660205268ffffffffffffffffff61166682604060002061262e565b50541660098114611734575b60088114611724575b60078114611714575b60068114611704575b600581146116f4575b600481146116e4575b600381146116d0575b6002146116bc575b6001019089929161120b565b976116c860019161279a565b9890506116b0565b976116dc60029161279a565b9890506116a8565b966116ee9061279a565b9661169f565b956116fe9061279a565b95611696565b9461170e9061279a565b9461168d565b9361171e9061279a565b93611684565b9261172e9061279a565b9261167b565b9161173e9061279a565b91611672565b606460405162461bcd60e51b815260206004820152601460248201527f44726177206973206e6f742068617070656e65640000000000000000000000006044820152fd5b634e487b7160e01b600052604160045260246000fd5b3461040c57600060031936011261040c576117c56001600160a01b036000541633146126ea565b60035460ff81166117dc5760ff1916600117600355005b606460405162461bcd60e51b815260206004820152601960248201527f4c6f747465727920697320616c726561647920706175736564000000000000006044820152fd5b3461040c57608060031936011261040c576004356001600160801b039081811680910361040c57602435828116810361040c576044359083821680920361040c57606435848116810361040c577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009485549460ff8660401c16159567ffffffffffffffff811680159081611a25575b6001149081611a1b575b159081611a12575b506119e8578660017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000083161789556119b3575b503373ffffffffffffffffffffffffffffffffffffffff1960005416178060005560a01c6000526004602052604060002055600254906fffffffffffffffffffffffffffffffff19809460801b1691161760025560801b161760015560ff196003541660035561196057005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001178755876118f4565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b905015896118c1565b303b1591506118b9565b8891506118af565b3461040c57600060031936011261040c57602060405160038152f35b3461040c57600060031936011261040c57602060005460a01c604051908152f35b3461040c57602060031936011261040c57611a83612419565b6001600160a01b0390611a9b826000541633146126ea565b1673ffffffffffffffffffffffffffffffffffffffff196009541617600955600080f35b3461040c57600060031936011261040c57602060405160048152f35b3461040c57600060031936011261040c576020604051600a8152f35b3461040c57600060031936011261040c5760206001600160801b0360025416604051908152f35b3461040c57602060031936011261040c576004356000526008602052602060ff604060002054166040519015158152f35b3461040c57600060031936011261040c576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611bba5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b604060031936011261040c57611bf8612419565b602490813567ffffffffffffffff811161040c573660238201121561040c578060040135611c25816124d8565b92611c3360405194856124b5565b818452602091828501933687838301011161040c5781600092888693018737860101526001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016803014908115611e96575b50611bba57611ca0816000541633146126ea565b8116936040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa60009181611e67575b50611d0f578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103611e395750843b15611e0a57508173ffffffffffffffffffffffffffffffffffffffff19825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115611dd6575060006100199481925190845af4903d15611dcd573d611db0816124d8565b90611dbe60405192836124b5565b8152600081943d92013e613a37565b60609250613a37565b935050505034611de257005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d8311611e8f575b611e7f81836124b5565b8101031261040c57519088611cda565b503d611e75565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141587611c8c565b3461040c57600060031936011261040c57602060405160088152f35b3461040c57611eee3661242f565b9060005260076020526040600020600682101561040c57816003600a62ffffff938160209604015492060260031b1c16604051908152f35b3461040c57600060031936011261040c5760008080806001600160a01b03815416611f528133146126ea565b4790828215611f64575bf11561038857005b506108fc611f5c565b3461040c57602060031936011261040c57611f86612419565b611f9c6001600160a01b036000541633146126ea565b7fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff006003549260081b16911617600355600080f35b3461040c57600060031936011261040c57602060015460801c604051908152f35b3461040c57600060031936011261040c57602060405160028152f35b3461040c57600060031936011261040c5760005461204b6001600160a01b03821633146126ea565b6003549061205b60ff8316612735565b60a01c600052600460205260406000205442101561207c5760ff1916600355005b60a460405162461bcd60e51b815260206004820152604d60248201527f596f752063616e206f6e6c79207265737461727420746f2063757272656e742060448201527f656e642074696d6520696620796f75206861766520706175736564206d6f726560648201527f207468616e2031206672616d65000000000000000000000000000000000000006084820152fd5b3461040c57600060031936011261040c57602060025460801c604051908152f35b3461040c57600060031936011261040c57602060405160068152f35b3461040c5760208060031936011261040c57600054600435916001600160a01b038216916121783384146126ea565b61218660ff60035416612735565b8342101561228c5760a01c9182600052600482524260406000205410156121fc576bffffffffffffffffffffffff90818414610750576001600494019073ffffffffffffffffffffffffffffffffffffffff198260a01b1617600055166000525260406000205560ff1960035416600355600080f35b60a4826040519062461bcd60e51b82526004820152604960248201527f596f752063616e206f6e6c79207265737461727420746f206e657720656e642060448201527f74696d6520696620796f75206861766520706175736564206d6f72652074686160648201527f6e2031206672616d6500000000000000000000000000000000000000000000006084820152fd5b6064826040519062461bcd60e51b825280600483015260248201527f6e6577456e6454696d65206d7573742067726561746572207468616e206e6f776044820152fd5b3461040c5760208060031936011261040c576004356000526005815260406000209081546122fc81612646565b9061230a60405192836124b5565b8082528282018094600052836000206000915b83831061238c5760408051878152865181890181905289928201908960005b8281106123495784840385f35b9091928261010060019261237d60408a516001600160a01b03815116845285810151151586850152015160408301906123ec565b0196019101949291909461233c565b60028660019261239b856126ae565b81520192019201919061231d565b3461040c57600060031936011261040c5760206001600160801b0360015416604051908152f35b3461040c57600060031936011261040c57602060405160018152f35b6000915b600683106123fd57505050565b60019062ffffff835116815260208091019201920191906123f0565b600435906001600160a01b038216820361040c57565b600319604091011261040c576004359060243590565b6040810190811067ffffffffffffffff82111761178857604052565b6060810190811067ffffffffffffffff82111761178857604052565b60a0810190811067ffffffffffffffff82111761178857604052565b60c0810190811067ffffffffffffffff82111761178857604052565b90601f601f19910116810190811067ffffffffffffffff82111761178857604052565b67ffffffffffffffff811161178857601f01601f191660200190565b90815180825260208080930193019160005b828110612514575050505090565b83516001600160a01b031685529381019392810192600101612506565b906040602061254e938051845201519181602082015201906124f4565b90565b805482101561256d5760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b919082519283825260005b8481106125af575050601f19601f8460006020809697860101520116010190565b60208183018101518483018201520161258e565b61254e9160c061261c6101808451845260208501516020850152604085015115156040850152606085015115156060850152612607608086015160808601906123ec565b60a085015190806101408601528401906124f4565b920151906101608184039101526124f4565b805482101561256d5760005260206000200190600090565b67ffffffffffffffff81116117885760051b60200190565b90604051915462ffffff908181168452818160181c166020850152818160301c166040850152818160481c166060850152818160601c16608085015260781c1660a08301526126ac82612499565b565b906040516126bb81612461565b60406126e56001839560ff81546001600160a01b038116875260a01c16151560208601520161265e565b910152565b156126f157565b606460405162461bcd60e51b815260206004820152601360248201527f6d73672e73656e646572203d3d206f776e6572000000000000000000000000006044820152fd5b1561273c57565b606460405162461bcd60e51b815260206004820152601a60248201527f4c6f747465727920697320616c726561647920737461727465640000000000006044820152fd5b6040519061278d82612445565b6060602083600081520152565b60001981146107505760010190565b906127b382612646565b6127c060405191826124b5565b828152601f196127d08294612646565b0190602036910137565b906040516127e781612445565b602081935468ffffffffffffffffff90818116845260481c16910152565b805182101561256d5760209160051b010190565b1561282057565b606460405162461bcd60e51b815260206004820152601e60248201527f6d73672e73656e646572203d3d206175746f6d6174696f6e4f7261636c6500006044820152fd5b9190820180921161075057565b60005460a01c60005260046020526040600020548042106128c9576128959061334e565b6126ac5760014301804311610750576001600160801b03166fffffffffffffffffffffffffffffffff196002541617600255565b606460405162461bcd60e51b815260206004820152600f60248201527f4672616d65206e6f7420656e64656400000000000000000000000000000000006044820152fd5b6001600160801b036002541661292257600090565b600190565b61296760405161293681612445565b600f81527f626c6f636b2e74696d657374616d70000000000000000000000000000000000060208201524290613374565b6000805460a01c80825260046020526129b9604083205460405161298a81612445565b601981527f656e6454696d65735b63757272656e744672616d654964785d000000000000006020820152613374565b8152600460205260408120544210156129cf5790565b50600190565b9190820391821161075057565b8181029291811591840414171561075057565b9060016bffffffffffffffffffffffff8093160191821161075057565b6040519060e0820182811067ffffffffffffffff82111761178857604052606060c083600081526000602082015260006040820152600083820152604051612a5981612499565b8236823760808201528260a08201520152565b60405190612a7982612445565b606082526020808301600090818152846001855110612c6457825460a01c918215612c5957505083519060001994858301928311612bf95784612ac09101928351906129e2565b825192612acc836129f5565b9051908115612c45576bffffffffffffffffffffffff160460018101809111612c315785880152808210612c2857612b03916129d5565b90848201918211612bcf5780821015612c0d575081925b612b2484836129d5565b9060018201809211612bf957601f19612b55612b3f84612646565b93612b4d60405195866124b5565b808552612646565b01845b818110612be357505050855281905b83811215612b7757505050505090565b612ba0612b83826133e5565b928751612b8f8261279a565b94612b9a8383612805565b52612805565b507f80000000000000000000000000000000000000000000000000000000000000008114612bcf578401612b67565b602483634e487b7160e01b81526011600452fd5b8290612bed612a12565b82828701015201612b58565b602484634e487b7160e01b81526011600452fd5b612c1790826129d5565b60018101809111612bcf5792612b1a565b50505050505090565b602485634e487b7160e01b81526011600452fd5b602486634e487b7160e01b81526012600452fd5b935094505091505290565b6064846040519062461bcd60e51b82526004820152601c60248201527f50616765206d7573742067726561746572206f7220657175616c2031000000006044820152fd5b600090815460a01c808352600492602091848352604092612ccb8484205461334e565b61318b576002936001600160801b036002541694851561314957815195612cf187612499565b60c036883761010081018082116131365743116130ce574093855b600580821015612da257828852855283872054845186810191888352868201526060838183015281526080810181811067ffffffffffffffff821117612d8f57906044929187525190200660018101809111612d7c579062ffffff60019216612d75828b6136ff565b5201612d0c565b60248860118d634e487b7160e01b835252fd5b60248a60418f634e487b7160e01b835252fd5b50509295919496979383885260058752858820548651908882019283528782015260056060820152606081526080810181811067ffffffffffffffff8211176130bb579060199291885251902006926001918285018095116130a85762ffffff94851660a08501528189526005885286892080548492612e2182612646565b92612e2e8b5194856124b5565b8284528c528a8c208c908c8086015b85841061308257505050505050805190828b905b612f52575b5050505087526007865284872091908793885b8860068210612f1f57505050505055600254926fffffffffffffffffffffffffffffffff19841660025560ff6003541615612ea6575b5050505050565b6bffffffffffffffffffffffff612ed9612ed3875460a01c96878952858552868920549060801c90612864565b956129f5565b1685525282205580546001600160a01b0373ffffffffffffffffffffffffffffffffffffffff19612f0c8360a01c6129f5565b60a01b1691161790553880808080612e9f565b612f478597848697969495965116908560030260031b9162ffffff809116831b921b19161790565b960193929101612e69565b8a8c68ffffffffffffffffff8c81851692878410156130785782612f848d84612f7b888c612805565b51015190613710565b1694898603612faa575b5050505050508368ffffffffffffffffff809216011683612e51565b82600692939495969798999a505196612fc288612445565b87528087019586528a83525220805490680100000000000000008210156130645790612ff2918a8201815561262e565b9390936130525751835492517fffffffffffffffffffffffffffff0000000000000000000000000000000000009390931691161760489190911b71ffffffffffffffffff00000000000000000016179055849291903880808c8f8f612f8e565b60248f808e634e487b7160e01b825252fd5b5060248f60418e634e487b7160e01b835252fd5b5050505050612e56565b908495969792939491613094856126ae565b8152019201920190918c8896959493612e3d565b602489601188634e487b7160e01b835252fd5b60248a604189634e487b7160e01b835252fd5b6084898585519162461bcd60e51b8352820152602760248201527f43616e206e6f74206765742068617368206f66206d6f7265207468616e20323560448201527f3620626c6f636b000000000000000000000000000000000000000000000000006064820152fd5b60248760118c634e487b7160e01b835252fd5b6064888484519162461bcd60e51b8352820152600f60248201527f626c6f636b4e756d626572203e203000000000000000000000000000000000006044820152fd5b505050509050565b604051906131a082612445565b816131a9612a12565b815260206126e5612a12565b60021b907003fffffffffffffffffffffffffffffffc6ffffffffffffffffffffffffffffffffc83169216820361075057565b906001600160801b0380921660070291821691820361075057565b906001600160801b0380921660640291821691820361075057565b906001600160801b0380921661c3500291821691820361075057565b906001600160801b03809216620f42400291821691820361075057565b60019081811461331157600281146132fc57600381146132e757600481146132e757600581146132d257600681146132d257600781146132bd576008146132a55750670de0b6b3a764000090565b6132b96001600160801b038092541661323a565b1690565b506132b96001600160801b038092541661321e565b506132b96001600160801b0380925416613203565b506132b96001600160801b03809254166131e8565b506132b96001600160801b03809254166131b5565b5050600090565b6001600160a01b039161334891600052600560205268ffffffffffffffffff602060406000209201511690612551565b50541690565b60ff60035416908161335e575090565b905061336f60025460801c42612864565b101590565b6000919082916133d260405180926133be60208301957fb60e72cc000000000000000000000000000000000000000000000000000000008752604060248501526064840190612583565b90604483015203601f1981018352826124b5565b51906a636f6e736f6c652e6c6f675afa50565b6133ed612a12565b91600160408181860152600090815460a01c808610156136c3575060209593929495868186015286835260048082528284205486528784526007825261343483852061265e565b6080870152839784918886905b6135c2575b5050613466613459899a999798996127a9565b9260a08a019384526127a9565b9360c08901948552858093819b5b613487575b505050505050505050909150565b8382526006808752838320548d10156135bc57828a5b6134ae575b50509a88019a88613474565b8d845281885284842080548210156135b657818f6134cf8e9594869461262e565b5090600968ffffffffffffffffff809354161461355c575b808852848c526008826134fc858c8c2061262e565b5054161461350f575b505001909161349d565b6001600160a01b0391613542918952858d5261352d848b8b2061262e565b505460481c168a895260058d52898920612551565b5054166135548c519a6115188161279a565b528f80613505565b808852848c528d82848b8b20906135729161262e565b505460481c168d8c8b52600590528a8a209061358d91612551565b50546001600160a01b0316908851909f6135a69061279a565b9f6135b091612805565b526134e7565b506134a2565b50613479565b82879b9a98999b526006808652868820548210156136b8578892919088845b6135f5575b505082019091999a9897613441565b90918093945089528187528789208a81548310156136af5750816136189161262e565b50600968ffffffffffffffffff8092541614613681575b9060088b92613646838c8e888e8b8352522061262e565b5054161461365b575b810181949392916135e1565b9590810180911161366e5794899061364f565b602489601186634e487b7160e01b835252fd5b9c9b8a819c9b9a9c0180911161369c579b9c999a989961362f565b60248c601187634e487b7160e01b835252fd5b949392506135e6565b509997969899613446565b6136e990610f4d928794899860206136f598999b015282815260046020522054936129d5565b60025460801c906129e2565b8252606082015290565b90600681101561256d5760051b0190565b6040519092600061372083612499565b60059081845260a0366020860137805b845181101561375d578062ffffff61374a6001938a6136ff565b51166137568288612805565b5201613730565b50929490939194835b85811061387357505060a09081015191015162ffffff908116911603613835576002811015613796575050600290565b600281036137a5575050600390565b600381036137b1575090565b600481036137c0575050600790565b1461383057505b608460405162461bcd60e51b8152602060048201526024808201527f43616e206e6f742066696e64207072697a652061742063616c63756c6174655060448201527f72697a65000000000000000000000000000000000000000000000000000000006064820152fd5b600990565b6003811015613845575050600190565b60038103613854575050600490565b60048103613863575050600690565b1461386e57506137c7565b600890565b60005b868110613887575b50600101613766565b62ffffff8061389684886136ff565b5116906138a38386612805565b5116146138b257600101613876565b6001919560006138c56138cb9386612805565b5261279a565b949061387e565b60005b6005811061390e575060a062ffffff9101511660018110908115613903575b506138fe57600190565b600090565b601a915011386138f4565b62ffffff60018161391f84866136ff565b511610908115613937575b50613311576001016138d5565b6045915061394583856136ff565b5116113861392a565b60005460a01c806000526004602052604060002054421061254e5760ff6003541661398157600181018091116107505790565b606460405162461bcd60e51b815260206004820152601160248201527f4c6f7474657279206973207061757365640000000000000000000000000000006044820152fd5b9160005b836000526006602090808252604090816000208054851015613a2a57846139ef9161262e565b50928668ffffffffffffffffff80955460481c1614613a1457505050506001016139c9565b909192955061334894966000525260002061262e565b5050505050915050600190565b90613a765750805115613a4c57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580613ac1575b613a87575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15613a7f56fea26469706673582212208ae4788258292bdaf1b22d6d4f69fa4d2c222f86701095abdade93295a62727b64736f6c63430008180033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Lottery & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lottery__factory {
    return super.connect(runner) as Lottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new Interface(_abi) as LotteryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lottery {
    return new Contract(address, _abi, runner) as unknown as Lottery;
  }
}
