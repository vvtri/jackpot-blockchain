/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../common';
import type { Lottery, LotteryInterface } from '../../contracts/Lottery';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'ERC1967InvalidImplementation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ERC1967NonPayable',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidInitialization',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotInitializing',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UUPSUnauthorizedCallContext',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'UUPSUnsupportedProxiableUUID',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'version',
        type: 'uint64',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_FIVE_FIRST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_FOUR_FIRST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_FOUR_FIRST_NUMBER_AND_LAST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_JACKPOT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_LAST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_NOT_LUCKY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_THREE_FIRST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_THREE_FIRST_NUMBER_AND_LAST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOTTERY_PRIZES_TWO_FIRST_NUMBER_AND_LAST_NUMBER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_LUCKY_NUMBER_LAST_SLOT_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_LUCKY_NUMBER_NORMAL_SLOT_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_TICKET_AMOUNT_EACH_BUY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MIN_LUCKY_NUMBER_SLOT_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPGRADE_INTERFACE_VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockNumber',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '_isPowerPlay',
        type: 'bool',
      },
      {
        internalType: 'uint24[6]',
        name: '_ticketNumber',
        type: 'uint24[6]',
      },
    ],
    name: 'buyTicket',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentFrameIdx',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'drawing',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'endTimes',
    outputs: [
      {
        internalType: 'uint256',
        name: 'endTime',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'frameDuration',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'getDrawDetail',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'endTime',
            type: 'uint256',
          },
          {
            internalType: 'uint24[6]',
            name: 'luckyNumber',
            type: 'uint24[6]',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'jackpot',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchFive',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchFourAndLast',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchFour',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchThreeAndLast',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchThree',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchTwoAndLast',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'money',
                type: 'uint256',
              },
              {
                internalType: 'address[]',
                name: 'winners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawPrizeDetailDto',
            name: 'matchLast',
            type: 'tuple',
          },
        ],
        internalType: 'struct LotteryDeclaration.DrawDetailDto',
        name: 'result',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'page',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'size',
            type: 'uint256',
          },
        ],
        internalType: 'struct LotteryDeclaration.PaginationRequestDto',
        name: 'paginationDto',
        type: 'tuple',
      },
    ],
    name: 'getDrawList',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'endTime',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'frameIdx',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'isExist',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isFuture',
                type: 'bool',
              },
              {
                internalType: 'uint24[6]',
                name: 'luckyNumber',
                type: 'uint24[6]',
              },
              {
                internalType: 'address[]',
                name: 'jackpotWinners',
                type: 'address[]',
              },
              {
                internalType: 'address[]',
                name: 'matchFiveWinners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawStatisticDto[]',
            name: 'draws',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'totalPage',
            type: 'uint256',
          },
        ],
        internalType: 'struct LotteryDeclaration.DrawListDto',
        name: 'result',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getHomeStatistic',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'endTime',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'frameIdx',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'isExist',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isFuture',
                type: 'bool',
              },
              {
                internalType: 'uint24[6]',
                name: 'luckyNumber',
                type: 'uint24[6]',
              },
              {
                internalType: 'address[]',
                name: 'jackpotWinners',
                type: 'address[]',
              },
              {
                internalType: 'address[]',
                name: 'matchFiveWinners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawStatisticDto',
            name: 'nextDraw',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'endTime',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'frameIdx',
                type: 'uint256',
              },
              {
                internalType: 'bool',
                name: 'isExist',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isFuture',
                type: 'bool',
              },
              {
                internalType: 'uint24[6]',
                name: 'luckyNumber',
                type: 'uint24[6]',
              },
              {
                internalType: 'address[]',
                name: 'jackpotWinners',
                type: 'address[]',
              },
              {
                internalType: 'address[]',
                name: 'matchFiveWinners',
                type: 'address[]',
              },
            ],
            internalType: 'struct LotteryDeclaration.DrawStatisticDto',
            name: 'lastDraw',
            type: 'tuple',
          },
        ],
        internalType: 'struct LotteryDeclaration.HomeStatisticDto',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMyTicketList',
    outputs: [
      {
        components: [
          {
            internalType: 'uint24[6]',
            name: 'luckyNumber',
            type: 'uint24[6]',
          },
          {
            internalType: 'bool',
            name: 'isPowerPlay',
            type: 'bool',
          },
          {
            internalType: 'uint256',
            name: 'frameIdx',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'endTime',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'prize',
            type: 'uint256',
          },
        ],
        internalType: 'struct LotteryDeclaration.TicketDto[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_frameIdx',
        type: 'uint256',
      },
    ],
    name: 'getPrizeOfFrame',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'getTickets',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'owner',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'isPowerPlay',
            type: 'bool',
          },
          {
            internalType: 'uint24[6]',
            name: 'luckyNumber',
            type: 'uint24[6]',
          },
        ],
        internalType: 'struct LotteryDeclaration.Ticket[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'getWinningHistoryByFrame',
    outputs: [
      {
        components: [
          {
            internalType: 'uint72',
            name: 'prize',
            type: 'uint72',
          },
          {
            internalType: 'uint72',
            name: 'ticketIdx',
            type: 'uint72',
          },
        ],
        internalType: 'struct LotteryDeclaration.Winning[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: '_endTime',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: '_frameDuration',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: '_ticketPrice',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: '_powerPlayPrice',
        type: 'uint128',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'isPaidForWinners',
    outputs: [
      {
        internalType: 'bool',
        name: 'isPaid',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPaused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'luckyNumbers',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
    ],
    name: 'payForWinners',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'powerPlayPrice',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'prepareDrawing',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newEndTime',
        type: 'uint256',
      },
    ],
    name: 'restart',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'restart',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'currentEndTime',
        type: 'uint256',
      },
    ],
    name: 'setCurrentEndTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'shouldDrawing',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'shouldPreparingDrawing',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ticketPrice',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'tickets',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'isPowerPlay',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'frameIdx',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'winningHistories',
    outputs: [
      {
        internalType: 'uint72',
        name: 'prize',
        type: 'uint72',
      },
      {
        internalType: 'uint72',
        name: 'ticketIdx',
        type: 'uint72',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
] as const;

const _bytecode =
  '0x60a0806040523461002a573060805261385e90816100308239608051818181611a4f0152611b4e0152f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60e060003560e01c90816308c7dc7d146121fa5781631209b1f6146121d357816314f2979f146120f95781631801f38e14611f735781631aae4fd814611f575781631aaed25914611f365781631ef3755d14611e4d578163207aaa3214611e315781632f2043b814611e10578163488d92c214611dca5781634ee5fc5d14611dae5781634f1ef28614611ac957816352d1902d14611a3457816354f1d42714611a0357816357e871e7146119dc578163648867ae146119c057816364ac9f2e146119a45781636f58937614611983578163703ff1a614611967578163742676371461175a5781638456cb59146116d85781638c60212b14610f985781638da5cb5b14610f715781639065e70f14610f42578163932b37e014610f1657816399a62b0614610efa5781639af622b514610e405781639db2415e14610e255781639f5c3d5914610e09578163a374e43f14610db8578163a8109d0414610db3578163ad3cb1cc14610d55578163b0e045ae14610d30578163b187bd2614610d0d578163b1f9028a14610cf1578163b28da7a314610cb0578163b34fda2a14610be6578163b5a17a8014610bca578163b77200b114610b9b578163c43c2d3d14610ad7578163d59845661461079b578163d8d1ecf71461077f578163df4456cc1461072f578163ea50fbb014610674578163ed21b1de146103da575063fa868a350361000e576020806003193601126103d557600435906001600160a01b0391610247836000541633146124fe565b806000526008825260ff60406000205416610391578060005260068252604060002080546102748161245a565b9161028260405193846122c9565b8183526000908152848120858085015b84841061037357505050505080519360005b8581106102c55760008481526008865260409020805460ff19166001179055005b68ffffffffffffffffff828487876001856102e08886612619565b5151161461036657936103386000959461032361031d8897968589989789988952600581526103138d60408b2094612619565b5101511690612365565b506124c2565b511691610330888b612619565b515116612fb5565b9082821561035d575bf115610351576001905b016102a4565b6040513d6000823e3d90fd5b506108fc610341565b505050505060019061034b565b6001918291610381856125ee565b8152019201920191908690610292565b6064826040519062461bcd60e51b82526004820152601b60248201527f21697350616964466f7257696e6e6572735b6672616d654964785d00000000006044820152fd5b600080fd5b346103d55760006003193601126103d55760008060005460a09060a01c925b8381111561060a575061042461040e8361245a565b9261041c60405194856122c9565b80845261245a565b92601f19602094018460005b8281106105c2575050506000906000915b818311156104c15750505050604051918083018184528251809152816040850193019160005b8281106104745785850386f35b90919293826101406001926080885161048e838251612216565b80850151151560c084015260408101518c8401526060810151610100840152015161012082015201950193929101610467565b6000969395969492945b85600052600590818952604060002080548210156105a857816104ed91612365565b506001600160a01b03339154160361059f5761059760019293610510838a613723565b89600052858c52610525846040600020612365565b50958a60005260048d52604060002054908d5260ff610548866040600020612365565b50548d1c16610564876040519961055e8b612291565b01612472565b885215158d8801528a604088015260608701526080860152610585816125ae565b946105908289612619565b5286612619565b505b016104cb565b60019150610599565b5050509091936105bb90969593966125ae565b9190610441565b6040516105ce81612291565b6040516105da816122ad565b60c03682378152600083820152600060408201526000606082015260006080820152828288010152018590610430565b9360009392935b85600052600560205260406000208054821015610660578161063291612365565b50546001600160a01b0316331461064c575b600101610611565b936106586001916125ae565b949050610644565b50509361066f909392936125ae565b6103f9565b346103d55760006003193601126103d55761068d612ef1565b50610696612ef1565b61069e6136ac565b9060018210156106f0575b6106b56106ec92613143565b81526040519182916020835260206106d8825160408387015260608601906123d7565b910151601f198483030160408501526123d7565b0390f35b6000198201828111610719576106ec9261070c6106b592613143565b60208401529250506106a9565b634e487b7160e01b600052601160045260246000fd5b346103d55761073d36612243565b906000526006602052604060002080548210156103d55760409161076091612442565b505468ffffffffffffffffff825191818116835260481c166020820152f35b346103d55760006003193601126103d557602060405160458152f35b6101006003193601126103d557600435602490813591821515908184036103d55736606312156103d5576040516107d1816122ad565b806101043681116103d5576044915b818310610abb57505050333b610a7757600a8411610a0d5761080181613630565b156109c957610826846001966001546001600160801b038116916109b5575b506127ab565b3403610971576108346136ac565b60005b85811061084057005b8160005260206005815260406000206040519061085c82612275565b33825282820188815260408301918783528054906801000000000000000082101561095c5790610890918d82018155612365565b9390936109475751835491517fffffffffffffffffffffff000000000000000000000000000000000000000000929092166001600160a01b03919091161790151560a01b74ff000000000000000000000000000000000000000016178255518993926000928592909184905b6006821061090f57505050015501610837565b61093a839662ffffff8395979496975116908660030260031b9162ffffff809116831b921b19161790565b95019201869392916108fc565b88634e487b7160e01b60005260006004526000fd5b89634e487b7160e01b60005260416004526000fd5b60648260166040519162461bcd60e51b8352602060048401528201527f746f74616c436f7374203d3d206d73672e76616c7565000000000000000000006044820152fd5b906109c39160801c9061262d565b88610820565b60648260156040519162461bcd60e51b8352602060048401528201527f496e76616c6964207469636b6574206e756d62657200000000000000000000006044820152fd5b60848260216040519162461bcd60e51b8352602060048401528201527f5f616d6f756e74203c3d206d61785469636b6574416d6f756e7445616368427560448201527f79000000000000000000000000000000000000000000000000000000000000006064820152fd5b606482601b6040519162461bcd60e51b8352602060048401528201527f6d73672e73656e6465722e636f64652e6c656e677468203d3d203000000000006044820152fd5b823562ffffff811681036103d5578152602092830192016107e0565b346103d5576020806003193601126103d557600435600052600681526040600020908154610b048161245a565b90610b1260405192836122c9565b8082528282018094600052836000206000915b838310610b7f5760408051878152865181890181905289928201908960005b828110610b515784840385f35b8551805168ffffffffffffffffff908116865290830151168483015294810194604090930192600101610b44565b6001868192610b8d856125ee565b815201920192019190610b25565b346103d55760006003193601126103d557610bc26001600160a01b036000541633146124fe565b610019612a71565b346103d55760006003193601126103d557602060405160058152f35b346103d55760406003193601126103d557604051610c0381612259565b6004358152610c1a60209160243583820152612835565b906040519181839283526060830191805192604083860152835180915260808501908360808260051b8801019501916000905b828210610c635750505050015160408301520390f35b91939480610c9e887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80600195979b849b030186528a516123d7565b98019201920187969594939192610c4d565b346103d55760206003193601126103d557600054610cd86001600160a01b03821633146124fe565b60a01c6000526004602052600435604060002055600080f35b346103d55760006003193601126103d557602060405160098152f35b346103d55760006003193601126103d557602060ff600354166040519015158152f35b346103d55760006003193601126103d5576020610d4b6126f0565b6040519015158152f35b346103d55760006003193601126103d5576106ec604051610d7581612259565b600581527f352e302e300000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190612397565b6121fa565b346103d557610dc636612243565b906000526005602052604060002080548210156103d557604091610de991612365565b505460ff8251916001600160a01b038116835260a01c1615156020820152f35b346103d55760006003193601126103d557602060405160078152f35b346103d55760006003193601126103d5576020610d4b6126d6565b346103d5576020806003193601126103d5576004356000526006815260406000208054610e6c8161245a565b91610e7a60405193846122c9565b8183526000908152838120848085015b848410610edc575084516000908190875b818310610ead57505050604051908152f35b909192610ed3600191610ecd68ffffffffffffffffff6103308887612619565b9061262d565b93019190610e9b565b6001918291610eea856125ee565b8152019201920191908590610e8a565b346103d55760006003193601126103d5576020604051601a8152f35b346103d55760206003193601126103d55760043560005260046020526020604060002054604051908152f35b346103d55760006003193601126103d557610f696001600160a01b036000541633146124fe565b61001961263a565b346103d55760006003193601126103d55760206001600160a01b0360005416604051908152f35b346103d55760206003193601126103d557604051610140810181811067ffffffffffffffff8211176116c25760405260008152604051610fd7816122ad565b60c03682376020820152610fe9612594565b6040820152610ff6612594565b6060820152611003612594565b6080820152611010612594565b60a082015261101d612594565b60c082015261102a612594565b60e0820152611037612594565b610100820152611045612594565b61012082015260005460a01c600435101561167e576004356000526004602052604060002054815260043560005260076020526110856040600020612472565b6020820152670de0b6b3a76400006040820151526001600160801b036111158160015416826110b382612f98565b16606085015152826110c482612f7c565b16608085015152826110d582612f61565b1660a085015152826110e682612f61565b1660c085015152826110f782612f46565b1660e0850151528261110882612f46565b1661010085015152612f13565b16610120820151526000906000806000806000916000938660009660043560005260066020526040600020549960005b8b811061157957506111b89461118e6111c698956111aa95602060606111846111d59f9e9c9861117761119c996125bd565b84604087015101526125bd565b92015101526125bd565b602060808d015101526125bd565b602060a08b015101526125bd565b602060c089015101526125bd565b602060e087015101526125bd565b602061010085015101526125bd565b6101208201516020015260009182808080808080805b8881106112e1576106ec8a604051918291602083528051602084015261121960208201516040850190612216565b60408101516112376101e09182610100870152610200860190612345565b906101206112d06112ba6112a561129061127b61126660608a015198601f19998d898c82850301910152612345565b60808a01518c82038a016101408e0152612345565b60a0890151888c8303016101608d0152612345565b60c0880151878b8303016101808c0152612345565b60e0870151868a8303016101a08b0152612345565b61010086015185898303016101c08a0152612345565b930151918584030190850152612345565b60043560005260066020526113036112fd826040600020612442565b506125ee565b90600968ffffffffffffffffff83511614611545575b8a600868ffffffffffffffffff8451161461150c575b82600768ffffffffffffffffff6001955116146114d3575b600668ffffffffffffffffff8251161461149a575b600568ffffffffffffffffff82511614611461575b600468ffffffffffffffffff82511614611428575b600368ffffffffffffffffff825116146113f4575b600268ffffffffffffffffff825116146113b8575b5050016111eb565b6113e960206101206113d46001600160a01b0394600435613076565b94015101519b6113e3816125ae565b9c612619565b911690528a8d6113b0565b61140081600435613076565b6001600160a01b0361141f602061010086015101519b6113e3816125ae565b9116905261139b565b61143481600435613076565b6001600160a01b03611458602060e086015101519a611452816125ae565b9b612619565b91169052611386565b61146d81600435613076565b6001600160a01b03611491602060c086015101519961148b816125ae565b9a612619565b91169052611371565b6114a681600435613076565b6001600160a01b036114ca602060a08601510151986114c4816125ae565b99612619565b9116905261135c565b6114df81600435613076565b6001600160a01b03611503602060808601510151976114fd816125ae565b98612619565b91169052611347565b61151883600435613076565b60608201516020015161152a8f6125ae565b9e61153491612619565b906001600160a01b0316905261132f565b8a6001600160a01b036115706020604061156187600435613076565b94015101519a611452816125ae565b91169052611319565b90919250600435600052600660205268ffffffffffffffffff6115a0826040600020612442565b5054166009811461166e575b6008811461165e575b6007811461164e575b6006811461163e575b6005811461162e575b6004811461161e575b6003811461160a575b6002146115f6575b60010190899291611145565b976116026001916125ae565b9890506115ea565b976116166002916125ae565b9890506115e2565b96611628906125ae565b966115d9565b95611638906125ae565b956115d0565b94611648906125ae565b946115c7565b93611658906125ae565b936115be565b92611668906125ae565b926115b5565b91611678906125ae565b916115ac565b606460405162461bcd60e51b815260206004820152601460248201527f44726177206973206e6f742068617070656e65640000000000000000000000006044820152fd5b634e487b7160e01b600052604160045260246000fd5b346103d55760006003193601126103d5576116ff6001600160a01b036000541633146124fe565b60035460ff81166117165760ff1916600117600355005b606460405162461bcd60e51b815260206004820152601960248201527f4c6f747465727920697320616c726561647920706175736564000000000000006044820152fd5b346103d55760806003193601126103d5576004356001600160801b03908181168091036103d55760243582811681036103d557604435908382168092036103d55760643584811681036103d5577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009485549460ff8660401c16159567ffffffffffffffff81168015908161195f575b6001149081611955575b15908161194c575b50611922578660017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000083161789556118ed575b503373ffffffffffffffffffffffffffffffffffffffff1960005416178060005560a01c6000526004602052604060002055600254906fffffffffffffffffffffffffffffffff19809460801b1691161760025560801b161760015560ff196003541660035561189a57005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011787558761182e565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b905015896117fb565b303b1591506117f3565b8891506117e9565b346103d55760006003193601126103d557602060405160038152f35b346103d55760006003193601126103d557602060005460a01c604051908152f35b346103d55760006003193601126103d557602060405160048152f35b346103d55760006003193601126103d5576020604051600a8152f35b346103d55760006003193601126103d55760206001600160801b0360025416604051908152f35b346103d55760206003193601126103d5576004356000526008602052602060ff604060002054166040519015158152f35b346103d55760006003193601126103d5576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003611a9f5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b60406003193601126103d5576001600160a01b03600435818116908181036103d55760249283359167ffffffffffffffff83116103d557366023840112156103d557826004013591611b1a836122ec565b90611b2860405192836122c9565b83825260209384830195368983830101116103d557816000928a889301893784010152807f000000000000000000000000000000000000000000000000000000000000000016803014908115611d80575b50611a9f57611b8d906000541633146124fe565b6040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa60009181611d51575b50611bf9578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103611d235750843b15611cf457508173ffffffffffffffffffffffffffffffffffffffff19825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115611cc0575060006100199481925190845af4903d15611cb7573d611c9a816122ec565b90611ca860405192836122c9565b8152600081943d92013e613795565b60609250613795565b935050505034611ccc57005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d8311611d79575b611d6981836122c9565b810103126103d557519088611bc4565b503d611d5f565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141588611b79565b346103d55760006003193601126103d557602060405160088152f35b346103d557611dd836612243565b906000526007602052604060002060068210156103d557816003600a62ffffff938160209604015492060260031b1c16604051908152f35b346103d55760006003193601126103d557602060015460801c604051908152f35b346103d55760006003193601126103d557602060405160028152f35b346103d55760006003193601126103d557600054611e756001600160a01b03821633146124fe565b60035490611e8560ff8316612549565b60a01c6000526004602052604060002054421015611ea65760ff1916600355005b60a460405162461bcd60e51b815260206004820152604d60248201527f596f752063616e206f6e6c79207265737461727420746f2063757272656e742060448201527f656e642074696d6520696620796f75206861766520706175736564206d6f726560648201527f207468616e2031206672616d65000000000000000000000000000000000000006084820152fd5b346103d55760006003193601126103d557602060025460801c604051908152f35b346103d55760006003193601126103d557602060405160068152f35b346103d5576020806003193601126103d557600054600435916001600160a01b03821691611fa23384146124fe565b611fb060ff60035416612549565b834210156120b65760a01c918260005260048252426040600020541015612026576bffffffffffffffffffffffff90818414610719576001600494019073ffffffffffffffffffffffffffffffffffffffff198260a01b1617600055166000525260406000205560ff1960035416600355600080f35b60a4826040519062461bcd60e51b82526004820152604960248201527f596f752063616e206f6e6c79207265737461727420746f206e657720656e642060448201527f74696d6520696620796f75206861766520706175736564206d6f72652074686160648201527f6e2031206672616d6500000000000000000000000000000000000000000000006084820152fd5b6064826040519062461bcd60e51b825280600483015260248201527f6e6577456e6454696d65206d7573742067726561746572207468616e206e6f776044820152fd5b346103d5576020806003193601126103d5576004356000526005815260406000209081546121268161245a565b9061213460405192836122c9565b8082528282018094600052836000206000915b8383106121b65760408051878152865181890181905289928201908960005b8281106121735784840385f35b909192826101006001926121a760408a516001600160a01b0381511684528581015115158685015201516040830190612216565b01960191019492919094612166565b6002866001926121c5856124c2565b815201920192019190612147565b346103d55760006003193601126103d55760206001600160801b0360015416604051908152f35b346103d55760006003193601126103d557602060405160018152f35b6000915b6006831061222757505050565b60019062ffffff8351168152602080910192019201919061221a565b60031960409101126103d5576004359060243590565b6040810190811067ffffffffffffffff8211176116c257604052565b6060810190811067ffffffffffffffff8211176116c257604052565b60a0810190811067ffffffffffffffff8211176116c257604052565b60c0810190811067ffffffffffffffff8211176116c257604052565b90601f601f19910116810190811067ffffffffffffffff8211176116c257604052565b67ffffffffffffffff81116116c257601f01601f191660200190565b90815180825260208080930193019160005b828110612328575050505090565b83516001600160a01b03168552938101939281019260010161231a565b906040602061236293805184520151918160208201520190612308565b90565b80548210156123815760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b919082519283825260005b8481106123c3575050601f19601f8460006020809697860101520116010190565b6020818301810151848301820152016123a2565b6123629160c0612430610180845184526020850151602085015260408501511515604085015260608501511515606085015261241b60808601516080860190612216565b60a08501519080610140860152840190612308565b92015190610160818403910152612308565b80548210156123815760005260206000200190600090565b67ffffffffffffffff81116116c25760051b60200190565b90604051915462ffffff908181168452818160181c166020850152818160301c166040850152818160481c166060850152818160601c16608085015260781c1660a08301526124c0826122ad565b565b906040516124cf81612275565b60406124f96001839560ff81546001600160a01b038116875260a01c161515602086015201612472565b910152565b1561250557565b606460405162461bcd60e51b815260206004820152601360248201527f6d73672e73656e646572203d3d206f776e6572000000000000000000000000006044820152fd5b1561255057565b606460405162461bcd60e51b815260206004820152601a60248201527f4c6f747465727920697320616c726561647920737461727465640000000000006044820152fd5b604051906125a182612259565b6060602083600081520152565b60001981146107195760010190565b906125c78261245a565b6125d460405191826122c9565b828152601f196125e4829461245a565b0190602036910137565b906040516125fb81612259565b602081935468ffffffffffffffffff90818116845260481c16910152565b80518210156123815760209160051b010190565b9190820180921161071957565b60005460a01c60005260046020526040600020548042106126925761265e906130ac565b6124c05760014301804311610719576001600160801b03166fffffffffffffffffffffffffffffffff196002541617600255565b606460405162461bcd60e51b815260206004820152600f60248201527f4672616d65206e6f7420656e64656400000000000000000000000000000000006044820152fd5b6001600160801b03600254166126eb57600090565b600190565b6127306040516126ff81612259565b600f81527f626c6f636b2e74696d657374616d700000000000000000000000000000000000602082015242906130d2565b6000805460a01c8082526004602052612782604083205460405161275381612259565b601981527f656e6454696d65735b63757272656e744672616d654964785d0000000000000060208201526130d2565b8152600460205260408120544210156127985790565b50600190565b9190820391821161071957565b8181029291811591840414171561071957565b9060016bffffffffffffffffffffffff8093160191821161071957565b6040519060e0820182811067ffffffffffffffff8211176116c257604052606060c083600081526000602082015260006040820152600083820152604051612822816122ad565b8236823760808201528260a08201520152565b6040519061284282612259565b606082526020808301600090818152846001855110612a2d57825460a01c918215612a22575050835190600019948583019283116129c257846128899101928351906127ab565b825192612895836127be565b9051908115612a0e576bffffffffffffffffffffffff1604600181018091116129fa57858801528082106129f1576128cc9161279e565b9084820191821161299857808210156129d6575081925b6128ed848361279e565b90600182018092116129c257601f1961291e6129088461245a565b9361291660405195866122c9565b80855261245a565b01845b8181106129ac57505050855281905b8381121561294057505050505090565b61296961294c82613143565b928751612958826125ae565b946129638383612619565b52612619565b507f80000000000000000000000000000000000000000000000000000000000000008114612998578401612930565b602483634e487b7160e01b81526011600452fd5b82906129b66127db565b82828701015201612921565b602484634e487b7160e01b81526011600452fd5b6129e0908261279e565b6001810180911161299857926128e3565b50505050505090565b602485634e487b7160e01b81526011600452fd5b602486634e487b7160e01b81526012600452fd5b935094505091505290565b6064846040519062461bcd60e51b82526004820152601c60248201527f50616765206d7573742067726561746572206f7220657175616c2031000000006044820152fd5b600090815460a01c918281526004926020848152604092612a94848220546130ac565b612ee9576002936001600160801b0360025416948515612ea757815195612aba876122ad565b60c03688376101008101808211612e94574311612e2c574094835b600580821015612b4b57828652865283852054845187810191898352868201526060838183015281526080810181811067ffffffffffffffff821117612b38578652519020600191906044900662ffffff16612b31828b61345d565b5201612ad5565b60248860418f634e487b7160e01b835252fd5b50509391909597969784845260058352818420548251908482019788528382015260056060820152606081526080810181811067ffffffffffffffff821117612e19578352601962ffffff978892519020061660a08201528484526005835281842096875490612bba8261245a565b98612bc785519a8b6122c9565b828a528652848620869086808c015b858410612dfb57505050505050865196845b68ffffffffffffffffff8082168a811015612cfc5781612c1587612c0c8488612619565b5101518761346e565b16916001808403612c3b575b50505050600168ffffffffffffffffff8092160116612be8565b875193612c4785612259565b84528884019283528a8a5260068952878a2080549168010000000000000000831015612ce85782018155612c7b9190612442565b939093612cd55751835492517fffffffffffffffffffffffffffff0000000000000000000000000000000000009390931691161760489190911b71ffffffffffffffffff0000000000000000001617905538808080612c21565b50602489808f634e487b7160e01b825252fd5b8f8c6041602492634e487b7160e01b835252fd5b5050505091955093919592865260078552838620908692875b8760068210612dca575050505055600254926fffffffffffffffffffffffffffffffff19841660025560ff6003541615612d51575b5050505050565b6bffffffffffffffffffffffff612d84612d7e875460a01c96878952858552868920549060801c9061262d565b956127be565b1685525282205580546001600160a01b0373ffffffffffffffffffffffffffffffffffffffff19612db78360a01c6127be565b60a01b1691161790553880808080612d4a565b612df184968460019495965116908560030260031b9162ffffff809116831b921b19161790565b9501929101612d15565b6001918591612e09856124c2565b8152019201920191908790612bd6565b60248660418c634e487b7160e01b835252fd5b6084898685519162461bcd60e51b8352820152602760248201527f43616e206e6f74206765742068617368206f66206d6f7265207468616e20323560448201527f3620626c6f636b000000000000000000000000000000000000000000000000006064820152fd5b60248560118c634e487b7160e01b835252fd5b6064888584519162461bcd60e51b8352820152600f60248201527f626c6f636b4e756d626572203e203000000000000000000000000000000000006044820152fd5b505050509050565b60405190612efe82612259565b81612f076127db565b815260206124f96127db565b60021b907003fffffffffffffffffffffffffffffffc6ffffffffffffffffffffffffffffffffc83169216820361071957565b906001600160801b0380921660070291821691820361071957565b906001600160801b0380921660640291821691820361071957565b906001600160801b0380921661c3500291821691820361071957565b906001600160801b03809216620f42400291821691820361071957565b60019081811461306f576002811461305a5760038114613045576004811461304557600581146130305760068114613030576007811461301b576008146130035750670de0b6b3a764000090565b6130176001600160801b0380925416612f98565b1690565b506130176001600160801b0380925416612f7c565b506130176001600160801b0380925416612f61565b506130176001600160801b0380925416612f46565b506130176001600160801b0380925416612f13565b5050600090565b6001600160a01b03916130a691600052600560205268ffffffffffffffffff602060406000209201511690612365565b50541690565b60ff6003541690816130bc575090565b90506130cd60025460801c4261262d565b101590565b600091908291613130604051809261311c60208301957fb60e72cc000000000000000000000000000000000000000000000000000000008752604060248501526064840190612397565b90604483015203601f1981018352826122c9565b51906a636f6e736f6c652e6c6f675afa50565b61314b6127db565b91600160408181860152600090815460a01c808610156134215750602095939294958681860152868352600480825282842054865287845260078252613192838520612472565b6080870152839784918886905b613320575b50506131c46131b7899a999798996125bd565b9260a08a019384526125bd565b9360c08901948552858093819b5b6131e5575b505050505050505050909150565b8382526006808752838320548d101561331a57828a5b61320c575b50509a88019a886131d2565b8d8452818852848420805482101561331457818f61322d8e95948694612442565b5090600968ffffffffffffffffff80935416146132ba575b808852848c5260088261325a858c8c20612442565b5054161461326d575b50500190916131fb565b6001600160a01b03916132a0918952858d5261328b848b8b20612442565b505460481c168a895260058d52898920612365565b5054166132b28c519a611452816125ae565b528f80613263565b808852848c528d82848b8b20906132d091612442565b505460481c168d8c8b52600590528a8a20906132eb91612365565b50546001600160a01b0316908851909f613304906125ae565b9f61330e91612619565b52613245565b50613200565b506131d7565b82879b9a98999b52600680865286882054821015613416578892919088845b613353575b505082019091999a989761319f565b90918093945089528187528789208a815483101561340d57508161337691612442565b50600968ffffffffffffffffff80925416146133df575b9060088b926133a4838c8e888e8b83525220612442565b505416146133b9575b8101819493929161333f565b959081018091116133cc579489906133ad565b602489601186634e487b7160e01b835252fd5b9c9b8a819c9b9a9c018091116133fa579b9c999a989961338d565b60248c601187634e487b7160e01b835252fd5b94939250613344565b5099979698996131a4565b61344790610ecd9287948998602061345398999b0152828152600460205220549361279e565b60025460801c906127ab565b8252606082015290565b9060068110156123815760051b0190565b6040519092600061347e836122ad565b60059081845260a0366020860137805b84518110156134bb578062ffffff6134a86001938a61345d565b51166134b48288612619565b520161348e565b50929490939194835b8581106135d157505060a09081015191015162ffffff9081169116036135935760028110156134f4575050600290565b60028103613503575050600390565b6003810361350f575090565b6004810361351e575050600790565b1461358e57505b608460405162461bcd60e51b8152602060048201526024808201527f43616e206e6f742066696e64207072697a652061742063616c63756c6174655060448201527f72697a65000000000000000000000000000000000000000000000000000000006064820152fd5b600990565b60038110156135a3575050600190565b600381036135b2575050600490565b600481036135c1575050600690565b146135cc5750613525565b600890565b60005b8681106135e5575b506001016134c4565b62ffffff806135f4848861345d565b5116906136018386612619565b511614613610576001016135d4565b6001919560006136236136299386612619565b526125ae565b94906135dc565b60005b6005811061366c575060a062ffffff9101511660018110908115613661575b5061365c57600190565b600090565b601a91501138613652565b62ffffff60018161367d848661345d565b511610908115613695575b5061306f57600101613633565b604591506136a3838561345d565b51161138613688565b60005460a01c80600052600460205260406000205442106123625760ff600354166136df57600181018091116107195790565b606460405162461bcd60e51b815260206004820152601160248201527f4c6f7474657279206973207061757365640000000000000000000000000000006044820152fd5b9160005b836000526006602090808252604090816000208054851015613788578461374d91612442565b50928668ffffffffffffffffff80955460481c16146137725750505050600101613727565b90919295506130a6949660005252600020612442565b5050505050915050600190565b906137d457508051156137aa57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b8151158061381f575b6137e5575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b156137dd56fea26469706673582212207d5a444a55bf1993179b07cc655512a500fc5488417f5a0b0a8ed0da79bef38a64736f6c63430008180033';

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Lottery & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lottery__factory {
    return super.connect(runner) as Lottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new Interface(_abi) as LotteryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lottery {
    return new Contract(address, _abi, runner) as unknown as Lottery;
  }
}
