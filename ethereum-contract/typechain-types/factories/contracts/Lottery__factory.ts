/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Lottery, LotteryInterface } from "../../contracts/Lottery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FIVE_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FOUR_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_FOUR_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_JACKPOT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_NOT_LUCKY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_THREE_FIRST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_THREE_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOTTERY_PRIZES_TWO_FIRST_NUMBER_AND_LAST_NUMBER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LUCKY_NUMBER_LAST_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_LUCKY_NUMBER_NORMAL_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_TICKET_AMOUNT_EACH_BUY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_LUCKY_NUMBER_SLOT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPowerPlay",
        type: "bool",
      },
      {
        internalType: "uint24[6]",
        name: "_ticketNumber",
        type: "uint24[6]",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentFrameIdx",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "endTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frameDuration",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getDrawDetail",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "jackpot",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFive",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFourAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchFour",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchThreeAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchThree",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchTwoAndLast",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "money",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "winners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawPrizeDetailDto",
            name: "matchLast",
            type: "tuple",
          },
        ],
        internalType: "struct LotteryDeclaration.DrawDetailDto",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "page",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.PaginationRequestDto",
        name: "paginationDto",
        type: "tuple",
      },
    ],
    name: "getDrawList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto[]",
            name: "draws",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "totalPage",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.DrawListDto",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHomeStatistic",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto",
            name: "nextDraw",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "frameIdx",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isExist",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFuture",
                type: "bool",
              },
              {
                internalType: "uint24[6]",
                name: "luckyNumber",
                type: "uint24[6]",
              },
              {
                internalType: "address[]",
                name: "jackpotWinners",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "matchFiveWinners",
                type: "address[]",
              },
            ],
            internalType: "struct LotteryDeclaration.DrawStatisticDto",
            name: "lastDraw",
            type: "tuple",
          },
        ],
        internalType: "struct LotteryDeclaration.HomeStatisticDto",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTicketList",
    outputs: [
      {
        components: [
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
          {
            internalType: "bool",
            name: "isPowerPlay",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "frameIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prize",
            type: "uint256",
          },
        ],
        internalType: "struct LotteryDeclaration.TicketDto[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_frameIdx",
        type: "uint256",
      },
    ],
    name: "getPrizeOfFrame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getTickets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPowerPlay",
            type: "bool",
          },
          {
            internalType: "uint24[6]",
            name: "luckyNumber",
            type: "uint24[6]",
          },
        ],
        internalType: "struct LotteryDeclaration.Ticket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "getWinningHistoryByFrame",
    outputs: [
      {
        components: [
          {
            internalType: "uint72",
            name: "prize",
            type: "uint72",
          },
          {
            internalType: "uint72",
            name: "ticketIdx",
            type: "uint72",
          },
        ],
        internalType: "struct LotteryDeclaration.Winning[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_endTime",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_frameDuration",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_ticketPrice",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_powerPlayPrice",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_automationOracle",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "isPaidForWinners",
    outputs: [
      {
        internalType: "bool",
        name: "isPaid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "luckyNumbers",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
    ],
    name: "payForWinners",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "powerPlayPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prepareDrawing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newEndTime",
        type: "uint256",
      },
    ],
    name: "restart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "restart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentEndTime",
        type: "uint256",
      },
    ],
    name: "setCurrentEndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldDrawing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldPreparingDrawing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isPowerPlay",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "frameIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winningHistories",
    outputs: [
      {
        internalType: "uint72",
        name: "prize",
        type: "uint72",
      },
      {
        internalType: "uint72",
        name: "ticketIdx",
        type: "uint72",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523461002a573060805261396a9081610030823960805181818161184d015261194c0152f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60e060003560e01c90816308c7dc7d1461229b5781631209b1f61461227457816314f2979f1461219a5781631801f38e146120145781631aae4fd814611ff85781631aaed25914611fd75781631ef3755d14611eee578163207aaa3214611ed25781632f2043b814611eb15781632fd6fc2714611c555781633ccfd60b14611c0e578163488d92c214611bc85781634ee5fc5d14611bac5781634f1ef286146118c757816352d1902d1461183257816354f1d4271461180157816357e871e7146117da578163648867ae146117be57816364ac9f2e146117a25781636f58937614611781578163703ff1a6146117655781638456cb59146116e35781638c60212b14610fa35781638da5cb5b14610f7c5781639065e70f14610f4d578163932b37e014610f2157816399a62b0614610f055781639af622b514610e4b5781639db2415e14610e305781639f5c3d5914610e14578163a374e43f14610dc3578163a8109d0414610dbe578163ad3cb1cc14610d60578163b0e045ae14610d3b578163b187bd2614610d18578163b1f9028a14610cfc578163b28da7a314610cbb578163b34fda2a14610bf1578163b5a17a8014610bd5578163b77200b114610ba6578163c43c2d3d14610ae2578163d5984566146107a6578163d8d1ecf71461078a578163df4456cc1461073a578163ea50fbb01461067f578163ed21b1de146103e5575063fa868a350361000e576020806003193601126103e057600435906001600160a01b03916102528360005416331461259f565b806000526008825260ff6040600020541661039c5780600052600682526040600020805461027f816124fb565b9161028d604051938461236a565b8183526000908152848120858085015b84841061037e57505050505080519360005b8581106102d05760008481526008865260409020805460ff19166001179055005b68ffffffffffffffffff828487876001856102eb88866126ba565b5151161461037157936103436000959461032e61032888979685899897899889526005815261031e8d60408b20946126ba565b5101511690612406565b50612563565b51169161033b888b6126ba565b5151166130c1565b90828215610368575bf11561035c576001905b016102af565b6040513d6000823e3d90fd5b506108fc61034c565b5050505050600190610356565b600191829161038c8561268f565b815201920192019190869061029d565b6064826040519062461bcd60e51b82526004820152601b60248201527f21697350616964466f7257696e6e6572735b6672616d654964785d00000000006044820152fd5b600080fd5b346103e05760006003193601126103e05760008060005460a09060a01c925b83811115610615575061042f610419836124fb565b92610427604051948561236a565b8084526124fb565b92601f19602094018460005b8281106105cd575050506000906000915b818311156104cc5750505050604051918083018184528251809152816040850193019160005b82811061047f5785850386f35b9091929382610140600192608088516104998382516122b7565b80850151151560c084015260408101518c8401526060810151610100840152015161012082015201950193929101610472565b6000969395969492945b85600052600590818952604060002080548210156105b357816104f891612406565b506001600160a01b0333915416036105aa576105a26001929361051b838a61382f565b89600052858c52610530846040600020612406565b50958a60005260048d52604060002054908d5260ff610553866040600020612406565b50548d1c1661056f87604051996105698b612332565b01612513565b885215158d8801528a6040880152606087015260808601526105908161264f565b9461059b82896126ba565b52866126ba565b505b016104d6565b600191506105a4565b5050509091936105c6909695939661264f565b919061044c565b6040516105d981612332565b6040516105e58161234e565b60c0368237815260008382015260006040820152600060608201526000608082015282828801015201859061043b565b9360009392935b8560005260056020526040600020805482101561066b578161063d91612406565b50546001600160a01b03163314610657575b60010161061c565b9361066360019161264f565b94905061064f565b50509361067a9093929361264f565b610404565b346103e05760006003193601126103e057610698612ffd565b506106a1612ffd565b6106a96137b8565b9060018210156106fb575b6106c06106f79261324f565b81526040519182916020835260206106e382516040838701526060860190612478565b910151601f19848303016040850152612478565b0390f35b6000198201828111610724576106f7926107176106c09261324f565b60208401529250506106b4565b634e487b7160e01b600052601160045260246000fd5b346103e057610748366122e4565b906000526006602052604060002080548210156103e05760409161076b916124e3565b505468ffffffffffffffffff825191818116835260481c166020820152f35b346103e05760006003193601126103e057602060405160458152f35b6101006003193601126103e057600435602490813591821515908184036103e05736606312156103e0576040516107dc8161234e565b806101043681116103e0576044915b818310610ac657505050333b610a8257600a8411610a185761080c8161373c565b156109d457610831846001966001546001600160801b038116916109c0575b5061284c565b340361097c5761083f6137b8565b60005b85811061084b57005b8160005260206005815260406000206040519061086782612316565b338252828201888152604083019187835280549068010000000000000000821015610967579061089b918d82018155612406565b9390936109525751835491517fffffffffffffffffffffff000000000000000000000000000000000000000000929092166001600160a01b03919091161790151560a01b74ff000000000000000000000000000000000000000016178255518993926000928592909184905b6006821061091a57505050015501610842565b610945839662ffffff8395979496975116908660030260031b9162ffffff809116831b921b19161790565b9501920186939291610907565b88634e487b7160e01b60005260006004526000fd5b89634e487b7160e01b60005260416004526000fd5b60648260166040519162461bcd60e51b8352602060048401528201527f746f74616c436f7374203d3d206d73672e76616c7565000000000000000000006044820152fd5b906109ce9160801c906126ce565b8861082b565b60648260156040519162461bcd60e51b8352602060048401528201527f496e76616c6964207469636b6574206e756d62657200000000000000000000006044820152fd5b60848260216040519162461bcd60e51b8352602060048401528201527f5f616d6f756e74203c3d206d61785469636b6574416d6f756e7445616368427560448201527f79000000000000000000000000000000000000000000000000000000000000006064820152fd5b606482601b6040519162461bcd60e51b8352602060048401528201527f6d73672e73656e6465722e636f64652e6c656e677468203d3d203000000000006044820152fd5b823562ffffff811681036103e0578152602092830192016107eb565b346103e0576020806003193601126103e057600435600052600681526040600020908154610b0f816124fb565b90610b1d604051928361236a565b8082528282018094600052836000206000915b838310610b8a5760408051878152865181890181905289928201908960005b828110610b5c5784840385f35b8551805168ffffffffffffffffff908116865290830151168483015294810194604090930192600101610b4f565b6001868192610b988561268f565b815201920192019190610b30565b346103e05760006003193601126103e057610bcd6001600160a01b0360005416331461259f565b610019612b12565b346103e05760006003193601126103e057602060405160058152f35b346103e05760406003193601126103e057604051610c0e816122fa565b6004358152610c25602091602435838201526128d6565b906040519181839283526060830191805192604083860152835180915260808501908360808260051b8801019501916000905b828210610c6e5750505050015160408301520390f35b91939480610ca9887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80600195979b849b030186528a51612478565b98019201920187969594939192610c58565b346103e05760206003193601126103e057600054610ce36001600160a01b038216331461259f565b60a01c6000526004602052600435604060002055600080f35b346103e05760006003193601126103e057602060405160098152f35b346103e05760006003193601126103e057602060ff600354166040519015158152f35b346103e05760006003193601126103e0576020610d56612791565b6040519015158152f35b346103e05760006003193601126103e0576106f7604051610d80816122fa565b600581527f352e302e300000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190612438565b61229b565b346103e057610dd1366122e4565b906000526005602052604060002080548210156103e057604091610df491612406565b505460ff8251916001600160a01b038116835260a01c1615156020820152f35b346103e05760006003193601126103e057602060405160078152f35b346103e05760006003193601126103e0576020610d56612777565b346103e0576020806003193601126103e0576004356000526006815260406000208054610e77816124fb565b91610e85604051938461236a565b8183526000908152838120848085015b848410610ee7575084516000908190875b818310610eb857505050604051908152f35b909192610ede600191610ed868ffffffffffffffffff61033b88876126ba565b906126ce565b93019190610ea6565b6001918291610ef58561268f565b8152019201920191908590610e95565b346103e05760006003193601126103e0576020604051601a8152f35b346103e05760206003193601126103e05760043560005260046020526020604060002054604051908152f35b346103e05760006003193601126103e057610f746001600160a01b0360005416331461259f565b6100196126db565b346103e05760006003193601126103e05760206001600160a01b0360005416604051908152f35b346103e05760206003193601126103e057604051610140810181811067ffffffffffffffff8211176116cd5760405260008152604051610fe28161234e565b60c03682376020820152610ff4612635565b6040820152611001612635565b606082015261100e612635565b608082015261101b612635565b60a0820152611028612635565b60c0820152611035612635565b60e0820152611042612635565b610100820152611050612635565b61012082015260005460a01c6004351015611689576004356000526004602052604060002054815260043560005260076020526110906040600020612513565b6020820152670de0b6b3a76400006040820151526001600160801b036111208160015416826110be826130a4565b16606085015152826110cf82613088565b16608085015152826110e08261306d565b1660a085015152826110f18261306d565b1660c0850151528261110282613052565b1660e0850151528261111382613052565b166101008501515261301f565b16610120820151526000906000806000806000916000938660009660043560005260066020526040600020549960005b8b811061158457506111c3946111996111d198956111b5956020606061118f6111e09f9e9c986111826111a79961265e565b846040870151015261265e565b920151015261265e565b602060808d0151015261265e565b602060a08b0151015261265e565b602060c0890151015261265e565b602060e0870151015261265e565b6020610100850151015261265e565b6101208201516020015260009182808080808080805b8881106112ec576106f78a6040519182916020835280516020840152611224602082015160408501906122b7565b60408101516112426101e091826101008701526102008601906123e6565b906101206112db6112c56112b061129b61128661127160608a015198601f19998d898c828503019101526123e6565b60808a01518c82038a016101408e01526123e6565b60a0890151888c8303016101608d01526123e6565b60c0880151878b8303016101808c01526123e6565b60e0870151868a8303016101a08b01526123e6565b61010086015185898303016101c08a01526123e6565b9301519185840301908501526123e6565b600435600052600660205261130e6113088260406000206124e3565b5061268f565b90600968ffffffffffffffffff83511614611550575b8a600868ffffffffffffffffff84511614611517575b82600768ffffffffffffffffff6001955116146114de575b600668ffffffffffffffffff825116146114a5575b600568ffffffffffffffffff8251161461146c575b600468ffffffffffffffffff82511614611433575b600368ffffffffffffffffff825116146113ff575b600268ffffffffffffffffff825116146113c3575b5050016111f6565b6113f460206101206113df6001600160a01b0394600435613182565b94015101519b6113ee8161264f565b9c6126ba565b911690528a8d6113bb565b61140b81600435613182565b6001600160a01b0361142a602061010086015101519b6113ee8161264f565b911690526113a6565b61143f81600435613182565b6001600160a01b03611463602060e086015101519a61145d8161264f565b9b6126ba565b91169052611391565b61147881600435613182565b6001600160a01b0361149c602060c08601510151996114968161264f565b9a6126ba565b9116905261137c565b6114b181600435613182565b6001600160a01b036114d5602060a08601510151986114cf8161264f565b996126ba565b91169052611367565b6114ea81600435613182565b6001600160a01b0361150e602060808601510151976115088161264f565b986126ba565b91169052611352565b61152383600435613182565b6060820151602001516115358f61264f565b9e61153f916126ba565b906001600160a01b0316905261133a565b8a6001600160a01b0361157b6020604061156c87600435613182565b94015101519a61145d8161264f565b91169052611324565b90919250600435600052600660205268ffffffffffffffffff6115ab8260406000206124e3565b50541660098114611679575b60088114611669575b60078114611659575b60068114611649575b60058114611639575b60048114611629575b60038114611615575b600214611601575b60010190899291611150565b9761160d60019161264f565b9890506115f5565b9761162160029161264f565b9890506115ed565b966116339061264f565b966115e4565b956116439061264f565b956115db565b946116539061264f565b946115d2565b936116639061264f565b936115c9565b926116739061264f565b926115c0565b916116839061264f565b916115b7565b606460405162461bcd60e51b815260206004820152601460248201527f44726177206973206e6f742068617070656e65640000000000000000000000006044820152fd5b634e487b7160e01b600052604160045260246000fd5b346103e05760006003193601126103e05761170a6001600160a01b0360005416331461259f565b60035460ff81166117215760ff1916600117600355005b606460405162461bcd60e51b815260206004820152601960248201527f4c6f747465727920697320616c726561647920706175736564000000000000006044820152fd5b346103e05760006003193601126103e057602060405160038152f35b346103e05760006003193601126103e057602060005460a01c604051908152f35b346103e05760006003193601126103e057602060405160048152f35b346103e05760006003193601126103e0576020604051600a8152f35b346103e05760006003193601126103e05760206001600160801b0360025416604051908152f35b346103e05760206003193601126103e0576004356000526008602052602060ff604060002054166040519015158152f35b346103e05760006003193601126103e0576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361189d5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b60406003193601126103e0576001600160a01b03600435818116908181036103e05760249283359167ffffffffffffffff83116103e057366023840112156103e0578260040135916119188361238d565b90611926604051928361236a565b83825260209384830195368983830101116103e057816000928a889301893784010152807f000000000000000000000000000000000000000000000000000000000000000016803014908115611b7e575b5061189d5761198b9060005416331461259f565b6040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa60009181611b4f575b506119f7578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103611b215750843b15611af257508173ffffffffffffffffffffffffffffffffffffffff19825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115611abe575060006100199481925190845af4903d15611ab5573d611a988161238d565b90611aa6604051928361236a565b8152600081943d92013e6138a1565b606092506138a1565b935050505034611aca57005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d8311611b77575b611b67818361236a565b810103126103e0575190886119c2565b503d611b5d565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141588611977565b346103e05760006003193601126103e057602060405160088152f35b346103e057611bd6366122e4565b906000526007602052604060002060068210156103e057816003600a62ffffff938160209604015492060260031b1c16604051908152f35b346103e05760006003193601126103e05760008080806001600160a01b03815416611c3a81331461259f565b4790828215611c4c575bf11561035c57005b506108fc611c44565b346103e05760a06003193601126103e0576004356001600160801b03908181168091036103e05760243582811681036103e0576044358381168091036103e0576064359184831683036103e057608435926001600160a01b03841684036103e0577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009586549560ff8760401c16159667ffffffffffffffff811680159081611ea9575b6001149081611e9f575b159081611e96575b50611e6c578760017fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008316178a55611e37575b503373ffffffffffffffffffffffffffffffffffffffff1960005416178060005560a01c6000526004602052604060002055600254906fffffffffffffffffffffffffffffffff19809460801b1691161760025560801b16176001557fffffffffffffffffffffff00000000000000000000000000000000000000000074ffffffffffffffffffffffffffffffffffffffff006003549260081b16911617600355611de457005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff000000000000000000166801000000000000000117885588611d3d565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050158a611d0a565b303b159150611d02565b899150611cf8565b346103e05760006003193601126103e057602060015460801c604051908152f35b346103e05760006003193601126103e057602060405160028152f35b346103e05760006003193601126103e057600054611f166001600160a01b038216331461259f565b60035490611f2660ff83166125ea565b60a01c6000526004602052604060002054421015611f475760ff1916600355005b60a460405162461bcd60e51b815260206004820152604d60248201527f596f752063616e206f6e6c79207265737461727420746f2063757272656e742060448201527f656e642074696d6520696620796f75206861766520706175736564206d6f726560648201527f207468616e2031206672616d65000000000000000000000000000000000000006084820152fd5b346103e05760006003193601126103e057602060025460801c604051908152f35b346103e05760006003193601126103e057602060405160068152f35b346103e0576020806003193601126103e057600054600435916001600160a01b0382169161204333841461259f565b61205160ff600354166125ea565b834210156121575760a01c9182600052600482524260406000205410156120c7576bffffffffffffffffffffffff90818414610724576001600494019073ffffffffffffffffffffffffffffffffffffffff198260a01b1617600055166000525260406000205560ff1960035416600355600080f35b60a4826040519062461bcd60e51b82526004820152604960248201527f596f752063616e206f6e6c79207265737461727420746f206e657720656e642060448201527f74696d6520696620796f75206861766520706175736564206d6f72652074686160648201527f6e2031206672616d6500000000000000000000000000000000000000000000006084820152fd5b6064826040519062461bcd60e51b825280600483015260248201527f6e6577456e6454696d65206d7573742067726561746572207468616e206e6f776044820152fd5b346103e0576020806003193601126103e0576004356000526005815260406000209081546121c7816124fb565b906121d5604051928361236a565b8082528282018094600052836000206000915b8383106122575760408051878152865181890181905289928201908960005b8281106122145784840385f35b9091928261010060019261224860408a516001600160a01b03815116845285810151151586850152015160408301906122b7565b01960191019492919094612207565b60028660019261226685612563565b8152019201920191906121e8565b346103e05760006003193601126103e05760206001600160801b0360015416604051908152f35b346103e05760006003193601126103e057602060405160018152f35b6000915b600683106122c857505050565b60019062ffffff835116815260208091019201920191906122bb565b60031960409101126103e0576004359060243590565b6040810190811067ffffffffffffffff8211176116cd57604052565b6060810190811067ffffffffffffffff8211176116cd57604052565b60a0810190811067ffffffffffffffff8211176116cd57604052565b60c0810190811067ffffffffffffffff8211176116cd57604052565b90601f601f19910116810190811067ffffffffffffffff8211176116cd57604052565b67ffffffffffffffff81116116cd57601f01601f191660200190565b90815180825260208080930193019160005b8281106123c9575050505090565b83516001600160a01b0316855293810193928101926001016123bb565b9060406020612403938051845201519181602082015201906123a9565b90565b80548210156124225760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b919082519283825260005b848110612464575050601f19601f8460006020809697860101520116010190565b602081830181015184830182015201612443565b6124039160c06124d161018084518452602085015160208501526040850151151560408501526060850151151560608501526124bc608086015160808601906122b7565b60a085015190806101408601528401906123a9565b920151906101608184039101526123a9565b80548210156124225760005260206000200190600090565b67ffffffffffffffff81116116cd5760051b60200190565b90604051915462ffffff908181168452818160181c166020850152818160301c166040850152818160481c166060850152818160601c16608085015260781c1660a08301526125618261234e565b565b9060405161257081612316565b604061259a6001839560ff81546001600160a01b038116875260a01c161515602086015201612513565b910152565b156125a657565b606460405162461bcd60e51b815260206004820152601360248201527f6d73672e73656e646572203d3d206f776e6572000000000000000000000000006044820152fd5b156125f157565b606460405162461bcd60e51b815260206004820152601a60248201527f4c6f747465727920697320616c726561647920737461727465640000000000006044820152fd5b60405190612642826122fa565b6060602083600081520152565b60001981146107245760010190565b90612668826124fb565b612675604051918261236a565b828152601f1961268582946124fb565b0190602036910137565b9060405161269c816122fa565b602081935468ffffffffffffffffff90818116845260481c16910152565b80518210156124225760209160051b010190565b9190820180921161072457565b60005460a01c6000526004602052604060002054804210612733576126ff906131b8565b6125615760014301804311610724576001600160801b03166fffffffffffffffffffffffffffffffff196002541617600255565b606460405162461bcd60e51b815260206004820152600f60248201527f4672616d65206e6f7420656e64656400000000000000000000000000000000006044820152fd5b6001600160801b036002541661278c57600090565b600190565b6127d16040516127a0816122fa565b600f81527f626c6f636b2e74696d657374616d700000000000000000000000000000000000602082015242906131de565b6000805460a01c808252600460205261282360408320546040516127f4816122fa565b601981527f656e6454696d65735b63757272656e744672616d654964785d0000000000000060208201526131de565b8152600460205260408120544210156128395790565b50600190565b9190820391821161072457565b8181029291811591840414171561072457565b9060016bffffffffffffffffffffffff8093160191821161072457565b6040519060e0820182811067ffffffffffffffff8211176116cd57604052606060c0836000815260006020820152600060408201526000838201526040516128c38161234e565b8236823760808201528260a08201520152565b604051906128e3826122fa565b606082526020808301600090818152846001855110612ace57825460a01c918215612ac357505083519060001994858301928311612a63578461292a91019283519061284c565b8251926129368361285f565b9051908115612aaf576bffffffffffffffffffffffff160460018101809111612a9b5785880152808210612a925761296d9161283f565b90848201918211612a395780821015612a77575081925b61298e848361283f565b9060018201809211612a6357601f196129bf6129a9846124fb565b936129b7604051958661236a565b8085526124fb565b01845b818110612a4d57505050855281905b838112156129e157505050505090565b612a0a6129ed8261324f565b9287516129f98261264f565b94612a0483836126ba565b526126ba565b507f80000000000000000000000000000000000000000000000000000000000000008114612a395784016129d1565b602483634e487b7160e01b81526011600452fd5b8290612a5761287c565b828287010152016129c2565b602484634e487b7160e01b81526011600452fd5b612a81908261283f565b60018101809111612a395792612984565b50505050505090565b602485634e487b7160e01b81526011600452fd5b602486634e487b7160e01b81526012600452fd5b935094505091505290565b6064846040519062461bcd60e51b82526004820152601c60248201527f50616765206d7573742067726561746572206f7220657175616c2031000000006044820152fd5b600090815460a01c808352600492602091848352604092612b35848420546131b8565b612ff5576002936001600160801b0360025416948515612fb357815195612b5b8761234e565b60c03688376101008101808211612fa0574311612f38574093855b600580821015612c0c57828852855283872054845186810191888352868201526060838183015281526080810181811067ffffffffffffffff821117612bf957906044929187525190200660018101809111612be6579062ffffff60019216612bdf828b613569565b5201612b76565b60248860118d634e487b7160e01b835252fd5b60248a60418f634e487b7160e01b835252fd5b50509295919496979383885260058752858820548651908882019283528782015260056060820152606081526080810181811067ffffffffffffffff821117612f2557906019929188525190200692600191828501809511612f125762ffffff94851660a08501528189526005885286892080548492612c8b826124fb565b92612c988b51948561236a565b8284528c528a8c208c908c8086015b858410612eec57505050505050805190828b905b612dbc575b5050505087526007865284872091908793885b8860068210612d8957505050505055600254926fffffffffffffffffffffffffffffffff19841660025560ff6003541615612d10575b5050505050565b6bffffffffffffffffffffffff612d43612d3d875460a01c96878952858552868920549060801c906126ce565b9561285f565b1685525282205580546001600160a01b0373ffffffffffffffffffffffffffffffffffffffff19612d768360a01c61285f565b60a01b1691161790553880808080612d09565b612db18597848697969495965116908560030260031b9162ffffff809116831b921b19161790565b960193929101612cd3565b8a8c68ffffffffffffffffff8c8185169287841015612ee25782612dee8d84612de5888c6126ba565b5101519061357a565b1694898603612e14575b5050505050508368ffffffffffffffffff809216011683612cbb565b82600692939495969798999a505196612e2c886122fa565b87528087019586528a8352522080549068010000000000000000821015612ece5790612e5c918a820181556124e3565b939093612ebc5751835492517fffffffffffffffffffffffffffff0000000000000000000000000000000000009390931691161760489190911b71ffffffffffffffffff00000000000000000016179055849291903880808c8f8f612df8565b60248f808e634e487b7160e01b825252fd5b5060248f60418e634e487b7160e01b835252fd5b5050505050612cc0565b908495969792939491612efe85612563565b8152019201920190918c8896959493612ca7565b602489601188634e487b7160e01b835252fd5b60248a604189634e487b7160e01b835252fd5b6084898585519162461bcd60e51b8352820152602760248201527f43616e206e6f74206765742068617368206f66206d6f7265207468616e20323560448201527f3620626c6f636b000000000000000000000000000000000000000000000000006064820152fd5b60248760118c634e487b7160e01b835252fd5b6064888484519162461bcd60e51b8352820152600f60248201527f626c6f636b4e756d626572203e203000000000000000000000000000000000006044820152fd5b505050509050565b6040519061300a826122fa565b8161301361287c565b8152602061259a61287c565b60021b907003fffffffffffffffffffffffffffffffc6ffffffffffffffffffffffffffffffffc83169216820361072457565b906001600160801b0380921660070291821691820361072457565b906001600160801b0380921660640291821691820361072457565b906001600160801b0380921661c3500291821691820361072457565b906001600160801b03809216620f42400291821691820361072457565b60019081811461317b576002811461316657600381146131515760048114613151576005811461313c576006811461313c57600781146131275760081461310f5750670de0b6b3a764000090565b6131236001600160801b03809254166130a4565b1690565b506131236001600160801b0380925416613088565b506131236001600160801b038092541661306d565b506131236001600160801b0380925416613052565b506131236001600160801b038092541661301f565b5050600090565b6001600160a01b03916131b291600052600560205268ffffffffffffffffff602060406000209201511690612406565b50541690565b60ff6003541690816131c8575090565b90506131d960025460801c426126ce565b101590565b60009190829161323c604051809261322860208301957fb60e72cc000000000000000000000000000000000000000000000000000000008752604060248501526064840190612438565b90604483015203601f19810183528261236a565b51906a636f6e736f6c652e6c6f675afa50565b61325761287c565b91600160408181860152600090815460a01c8086101561352d575060209593929495868186015286835260048082528284205486528784526007825261329e838520612513565b6080870152839784918886905b61342c575b50506132d06132c3899a9997989961265e565b9260a08a0193845261265e565b9360c08901948552858093819b5b6132f1575b505050505050505050909150565b8382526006808752838320548d101561342657828a5b613318575b50509a88019a886132de565b8d8452818852848420805482101561342057818f6133398e959486946124e3565b5090600968ffffffffffffffffff80935416146133c6575b808852848c52600882613366858c8c206124e3565b50541614613379575b5050019091613307565b6001600160a01b03916133ac918952858d52613397848b8b206124e3565b505460481c168a895260058d52898920612406565b5054166133be8c519a61145d8161264f565b528f8061336f565b808852848c528d82848b8b20906133dc916124e3565b505460481c168d8c8b52600590528a8a20906133f791612406565b50546001600160a01b0316908851909f6134109061264f565b9f61341a916126ba565b52613351565b5061330c565b506132e3565b82879b9a98999b52600680865286882054821015613522578892919088845b61345f575b505082019091999a98976132ab565b90918093945089528187528789208a8154831015613519575081613482916124e3565b50600968ffffffffffffffffff80925416146134eb575b9060088b926134b0838c8e888e8b835252206124e3565b505416146134c5575b8101819493929161344b565b959081018091116134d8579489906134b9565b602489601186634e487b7160e01b835252fd5b9c9b8a819c9b9a9c01809111613506579b9c999a9899613499565b60248c601187634e487b7160e01b835252fd5b94939250613450565b5099979698996132b0565b61355390610ed89287948998602061355f98999b0152828152600460205220549361283f565b60025460801c9061284c565b8252606082015290565b9060068110156124225760051b0190565b6040519092600061358a8361234e565b60059081845260a0366020860137805b84518110156135c7578062ffffff6135b46001938a613569565b51166135c082886126ba565b520161359a565b50929490939194835b8581106136dd57505060a09081015191015162ffffff90811691160361369f576002811015613600575050600290565b6002810361360f575050600390565b6003810361361b575090565b6004810361362a575050600790565b1461369a57505b608460405162461bcd60e51b8152602060048201526024808201527f43616e206e6f742066696e64207072697a652061742063616c63756c6174655060448201527f72697a65000000000000000000000000000000000000000000000000000000006064820152fd5b600990565b60038110156136af575050600190565b600381036136be575050600490565b600481036136cd575050600690565b146136d85750613631565b600890565b60005b8681106136f1575b506001016135d0565b62ffffff806137008488613569565b51169061370d83866126ba565b51161461371c576001016136e0565b60019195600061372f61373593866126ba565b5261264f565b94906136e8565b60005b60058110613778575060a062ffffff910151166001811090811561376d575b5061376857600190565b600090565b601a9150113861375e565b62ffffff6001816137898486613569565b5116109081156137a1575b5061317b5760010161373f565b604591506137af8385613569565b51161138613794565b60005460a01c80600052600460205260406000205442106124035760ff600354166137eb57600181018091116107245790565b606460405162461bcd60e51b815260206004820152601160248201527f4c6f7474657279206973207061757365640000000000000000000000000000006044820152fd5b9160005b8360005260066020908082526040908160002080548510156138945784613859916124e3565b50928668ffffffffffffffffff80955460481c161461387e5750505050600101613833565b90919295506131b29496600052526000206124e3565b5050505050915050600190565b906138e057508051156138b657805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b8151158061392b575b6138f1575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b156138e956fea26469706673582212203e9b276ce25d02970dcadc92459ed32a34364002d85ccb25437b0a6d83f0249864736f6c63430008180033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Lottery & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lottery__factory {
    return super.connect(runner) as Lottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new Interface(_abi) as LotteryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lottery {
    return new Contract(address, _abi, runner) as unknown as Lottery;
  }
}
